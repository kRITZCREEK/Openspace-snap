// Generated by psc version 0.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_69) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_77) {
        if (_77 instanceof LT) {
            return "LT";
        };
        if (_77 instanceof GT) {
            return "GT";
        };
        if (_77 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_70) {
        if (_70) {
            return "true";
        };
        if (!_70) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_84) {
        return function (_85) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_73) {
        return function (_74) {
            return false;
        };
    }, function (_71) {
        return function (_72) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_78) {
        return function (_79) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_80) {
        return function (_81) {
            if (!_80 && !_81) {
                return EQ.value;
            };
            if (!_80 && _81) {
                return LT.value;
            };
            if (_80 && _81) {
                return EQ.value;
            };
            if (_80 && !_81) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_65) {
        return function (_66) {
            return _65;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _467 = compare(__dict_Ord_11)(a1)(a2);
                if (_467 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _468 = compare(__dict_Ord_12)(a1)(a2);
                if (_468 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _469 = compare(__dict_Ord_13)(a1)(a2);
                if (_469 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _470 = compare(__dict_Ord_14)(a1)(a2);
                if (_470 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_82) {
            return function (_83) {
                if (_82.length === 0 && _83.length === 0) {
                    return EQ.value;
                };
                if (_82.length === 0) {
                    return LT.value;
                };
                if (_83.length === 0) {
                    return GT.value;
                };
                if (_82.length >= 1) {
                    var _477 = _82.slice(1);
                    if (_83.length >= 1) {
                        var _475 = _83.slice(1);
                        var _473 = compare(__dict_Ord_10)(_82[0])(_83[0]);
                        if (_473 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_477)(_475);
                        };
                        return _473;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_75) {
        return function (_76) {
            if (_75 instanceof LT && _76 instanceof LT) {
                return true;
            };
            if (_75 instanceof GT && _76 instanceof GT) {
                return true;
            };
            if (_75 instanceof EQ && _76 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_67) {
        return function (_68) {
            return _67;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "#": $hash, 
        "$": $dollar, 
        "%": $percent, 
        "&&": $amp$amp, 
        "*": $times, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        ".&.": $dot$amp$dot, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        "/": $div, 
        "/=": $div$eq, 
        ":": $colon, 
        "<": $less, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<=": $less$eq, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">=": $greater$eq, 
        ">>=": $greater$greater$eq, 
        ">>>": $greater$greater$greater, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Bits: Bits, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        applicativeArr: applicativeArr, 
        applyArr: applyArr, 
        asTypeOf: asTypeOf, 
        bindArr: bindArr, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        complement: complement, 
        cons: cons, 
        "const": $$const, 
        eqArray: eqArray, 
        eqBoolean: eqBoolean, 
        eqNumber: eqNumber, 
        eqOrdering: eqOrdering, 
        eqString: eqString, 
        eqUnit: eqUnit, 
        flip: flip, 
        functorArr: functorArr, 
        id: id, 
        liftA1: liftA1, 
        liftM1: liftM1, 
        monadArr: monadArr, 
        negate: negate, 
        not: not, 
        numNumber: numNumber, 
        ordArray: ordArray, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordUnit: ordUnit, 
        otherwise: otherwise, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupArr: semigroupArr, 
        semigroupString: semigroupString, 
        semigroupUnit: semigroupUnit, 
        semigroupoidArr: semigroupoidArr, 
        shl: shl, 
        show: show, 
        showArray: showArray, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showOrdering: showOrdering, 
        showString: showString, 
        showUnit: showUnit, 
        shr: shr, 
        unit: unit, 
        "void": $$void, 
        zshr: zshr, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        abs: abs, 
        acos: acos, 
        asin: asin, 
        atan: atan, 
        atan2: atan2, 
        ceil: ceil, 
        cos: cos, 
        e: e, 
        exp: exp, 
        floor: floor, 
        ln10: ln10, 
        ln2: ln2, 
        log: log, 
        log10e: log10e, 
        log2e: log2e, 
        max: max, 
        min: min, 
        pi: pi, 
        pow: pow, 
        round: round, 
        sin: sin, 
        sqrt: sqrt, 
        sqrt1_2: sqrt1_2, 
        sqrt2: sqrt2, 
        tan: tan
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var nan = NaN;;
    var infinity = Infinity;;
    function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
    var readFloat = parseFloat;;
    return {
        infinity: infinity, 
        isFinite: isFinite, 
        isNaN: isNaN, 
        nan: nan, 
        readFloat: readFloat, 
        readInt: readInt
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        mkFn0: mkFn0, 
        mkFn1: mkFn1, 
        mkFn10: mkFn10, 
        mkFn2: mkFn2, 
        mkFn3: mkFn3, 
        mkFn4: mkFn4, 
        mkFn5: mkFn5, 
        mkFn6: mkFn6, 
        mkFn7: mkFn7, 
        mkFn8: mkFn8, 
        mkFn9: mkFn9, 
        on: on, 
        runFn0: runFn0, 
        runFn1: runFn1, 
        runFn10: runFn10, 
        runFn2: runFn2, 
        runFn3: runFn3, 
        runFn4: runFn4, 
        runFn5: runFn5, 
        runFn6: runFn6, 
        runFn7: runFn7, 
        runFn8: runFn8, 
        runFn9: runFn9
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_86) {
        return function (_87) {
            return function (_88) {
                return _86(_87)(_88);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_89) {
        return function (_90) {
            return _89(_90);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        eqRef: eqRef, 
        functorRef: functorRef, 
        liftRef: liftRef
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Char = {
        create: function (value) {
            return value;
        }
    };
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var showChar = new Prelude.Show(function (_96) {
        return "Char " + Prelude.show(Prelude.showString)(_96);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_92) {
        return function (_93) {
            return _92 === _93;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_94) {
        return function (_95) {
            return Prelude.compare(Prelude.ordString)(_94)(_95);
        };
    });
    var charString = function (_91) {
        return _91;
    };
    return {
        charString: charString, 
        eqChar: eqChar, 
        fromCharCode: fromCharCode, 
        ordChar: ordChar, 
        showChar: showChar, 
        toCharCode: toCharCode
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt
    };
})();
var PS = PS || {};
PS.DOM = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        forE: forE, 
        foreachE: foreachE, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE, 
        runPure: runPure, 
        untilE: untilE, 
        whileE: whileE
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function message(e) {
    return e.message;
  }
  ;
    
  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;
    
  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        catchException: catchException, 
        error: error, 
        message: message, 
        showError: showError, 
        showErrorImpl: showErrorImpl, 
        throwException: throwException
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function random() {  return Math.random();};
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function runST(f) {  return f;};
    return {
        modifySTRef: modifySTRef, 
        newSTRef: newSTRef, 
        readSTRef: readSTRef, 
        runST: runST, 
        writeSTRef: writeSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_16) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_16)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Rx_Observable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function just(x) {
    return Rx.Observable.just(x);
  }
  ;
    
  function fromArray(xs) {
    return Rx.Observable.fromArray(xs);
  }
  ;
    
  var empty = (function () {
    if (!Rx) {
      return {};
    } else {
      return Rx.Observable.empty();
    }
  }());
  ;
    
  function subscribe(ob) {
    return function(f) {
      return function() {
        return ob.subscribe(function(value) {
          f(value)();
        });
      };
    };
  }
  ;
    
  function merge(ob) {
    return function(other) {
      return ob.merge(other);
    };
  }
  ;
    
  function combineLatest(f) {
    return function(ob1) {
      return function(ob2) {
        return ob1.combineLatest(ob2, function (x, y) {
          return f(x)(y);
        });
      };
    };
  }
  ;
    
  function concat(x) {
    return function(y) {
      return x.concat(y);
    };
  };
  ;
    
  function take(n) {
    return function(ob) {
      return ob.take(n);
    };
  }
  ;
    
  function takeUntil(other) {
    return function(ob) {
      return ob.takeUntil(other);
    };
  }
  ;
    
  function map(f) {
    return function(ob) {
      return ob.map(f);
    };
  }
  ;
    
  function flatMap(ob) {
    return function(f) {
      return ob.flatMap(f);
    };
  }
  ;
    
  function flatMapLatest(ob) {
    return function(f) {
      return ob.flatMapLatest(f);
    };
  }
  ;
    
  function scan(ob) {
    return function(f) {
      return function(seed) {
        return ob.scan(seed, function(acc, value) {
          return f(value)(acc);
        });
      };
    };
  }
  ;
    
  function unwrap(ob) {
    return function() {
      return ob.map(function(eff) {
        return eff();
      });
    };
  }
  ;
    
  function switchLatest(ob) {
    return ob.switchLatest();
  }
  ;
    
  function debounce(ms) {
    return function(ob) {
      return ob.debounce(ms);
    };
  }
  ;
    
  function zip(f){
    return function(ob1){
      return function(ob2){
        return ob1.zip(ob2, function (x, y) {
          return f(x)(y);
        });
      };
    };
  }
  ;
    
  function reduce(f){
    return function(seed){
      return function(ob){
        return ob.reduce(function (x, y) {
          return f(x)(y);
        }, seed);
      };
    };
  }
  ;
    
  function delay(ms){
    return function(ob){
      return ob.delay(ms);
    };
  }
  ;
    var semigroupObservable = new Prelude.Semigroup(concat);
    var observableFunctor = new Prelude.Functor(map);
    var applyObservable = new Prelude.Apply(combineLatest(Prelude.id(Prelude.categoryArr)), function () {
        return observableFunctor;
    });
    var observableBind = new Prelude.Bind(flatMapLatest, function () {
        return applyObservable;
    });
    var applicativeObservable = new Prelude.Applicative(function () {
        return applyObservable;
    }, just);
    var monadObservable = new Prelude.Monad(function () {
        return applicativeObservable;
    }, function () {
        return observableBind;
    });
    return {
        applicativeObservable: applicativeObservable, 
        applyObservable: applyObservable, 
        combineLatest: combineLatest, 
        concat: concat, 
        debounce: debounce, 
        delay: delay, 
        empty: empty, 
        flatMap: flatMap, 
        flatMapLatest: flatMapLatest, 
        fromArray: fromArray, 
        just: just, 
        map: map, 
        merge: merge, 
        monadObservable: monadObservable, 
        observableBind: observableBind, 
        observableFunctor: observableFunctor, 
        reduce: reduce, 
        scan: scan, 
        semigroupObservable: semigroupObservable, 
        subscribe: subscribe, 
        switchLatest: switchLatest, 
        take: take, 
        takeUntil: takeUntil, 
        unwrap: unwrap, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_17) {
        return function (_102) {
            return function (_103) {
                if (_102) {
                    return _103;
                };
                if (!_102) {
                    return Prelude["return"](__dict_Monad_17)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_18) {
        return function (_104) {
            return function (_105) {
                if (!_104) {
                    return _105;
                };
                if (_104) {
                    return Prelude["return"](__dict_Monad_18)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_19) {
        return function (_97) {
            return function (_98) {
                if (_97 === 0) {
                    return Prelude["return"](__dict_Monad_19)([  ]);
                };
                return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(_98)(function (_4) {
                    return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_19)(_97 - 1)(_98))(function (_3) {
                        return Prelude["return"](__dict_Monad_19)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_20) {
        return function (_99) {
            return function (_100) {
                return function (_101) {
                    if (_101.length === 0) {
                        return Prelude["return"](__dict_Monad_20)(_100);
                    };
                    if (_101.length >= 1) {
                        var _507 = _101.slice(1);
                        return Prelude[">>="](__dict_Monad_20["__superclass_Prelude.Bind_1"]())(_99(_100)(_101[0]))(function (a$prime) {
                            return foldM(__dict_Monad_20)(_99)(a$prime)(_507);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        foldM: foldM, 
        replicateM: replicateM, 
        unless: unless, 
        when: when
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_21) {
        return function (f) {
            return defer2(__dict_Lazy2_21)(function (_) {
                return f(fix2(__dict_Lazy2_21)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_22) {
        return function (f) {
            return defer1(__dict_Lazy1_22)(function (_) {
                return f(fix1(__dict_Lazy1_22)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_23) {
        return function (f) {
            return defer(__dict_Lazy_23)(function (_) {
                return f(fix(__dict_Lazy_23)(f));
            });
        };
    };
    return {
        Lazy: Lazy, 
        Lazy1: Lazy1, 
        Lazy2: Lazy2, 
        defer: defer, 
        defer1: defer1, 
        defer2: defer2, 
        fix: fix, 
        fix1: fix1, 
        fix2: fix2
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_24) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_24)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_25) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_25)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_26) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_26)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_27) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_27)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_28) {
        return function (w) {
            return $less$less$eq(__dict_Extend_28)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        "<<=": $less$less$eq, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        Extend: Extend, 
        duplicate: duplicate, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_29) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_29)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_30) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_30)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_31) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_31)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_32) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_32)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_33) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_33)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less, 
        ">=>": $greater$eq$greater, 
        ifM: ifM, 
        join: join
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_34) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_34)(Prelude["<$>"](__dict_Apply_34["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_35) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_35)(Prelude["<$>"](__dict_Apply_35["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_36) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<*>"](__dict_Apply_36)(Prelude["<$>"](__dict_Apply_36["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_37) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_37)(Prelude["<*>"](__dict_Apply_37)(Prelude["<*>"](__dict_Apply_37)(Prelude["<$>"](__dict_Apply_37["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_38) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_38)(Prelude["<*>"](__dict_Apply_38)(Prelude["<$>"](__dict_Apply_38["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_39) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_39)(Prelude["<$>"](__dict_Apply_39["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_40) {
        return function (a) {
            return $times$greater(__dict_Apply_40)(a)(forever(__dict_Apply_40)(a));
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times, 
        forever: forever, 
        lift2: lift2, 
        lift3: lift3, 
        lift4: lift4, 
        lift5: lift5
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        "<|>": $less$bar$greater, 
        Alt: Alt
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_41) {
        return function (__dict_Lazy1_42) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_41["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_41["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_42)(function (_) {
                    return many(__dict_Alternative_41)(__dict_Lazy1_42)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_43) {
        return function (__dict_Lazy1_44) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_43["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_43)(__dict_Lazy1_44)(v))(Prelude.pure(__dict_Alternative_43["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_45) {
        return function (_106) {
            if (_106) {
                return Prelude["return"](__dict_MonadPlus_45["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_106) {
                return Control_Plus.empty((__dict_MonadPlus_45["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_46) {
        return function (__dict_Show_47) {
            return new Prelude.Show(function (_116) {
                if (_116 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_46)(_116.value0) + ")");
                };
                if (_116 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_47)(_116.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_110) {
        return function (_111) {
            if (_111 instanceof Left) {
                return new Left(_111.value0);
            };
            if (_111 instanceof Right) {
                return new Right(_110(_111.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_50) {
        return function (__dict_Eq_51) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_50)(__dict_Eq_51))(a)(b);
                };
            }, function (_117) {
                return function (_118) {
                    if (_117 instanceof Left && _118 instanceof Left) {
                        return Prelude["=="](__dict_Eq_50)(_117.value0)(_118.value0);
                    };
                    if (_117 instanceof Right && _118 instanceof Right) {
                        return Prelude["=="](__dict_Eq_51)(_117.value0)(_118.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_48) {
        return function (__dict_Ord_49) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_48["__superclass_Prelude.Eq_0"]())(__dict_Ord_49["__superclass_Prelude.Eq_0"]());
            }, function (_119) {
                return function (_120) {
                    if (_119 instanceof Left && _120 instanceof Left) {
                        return Prelude.compare(__dict_Ord_48)(_119.value0)(_120.value0);
                    };
                    if (_119 instanceof Right && _120 instanceof Right) {
                        return Prelude.compare(__dict_Ord_49)(_119.value0)(_120.value0);
                    };
                    if (_119 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_120 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_107) {
        return function (_108) {
            return function (_109) {
                if (_109 instanceof Left) {
                    return _107(_109.value0);
                };
                if (_109 instanceof Right) {
                    return _108(_109.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_112) {
        return function (_113) {
            if (_112 instanceof Left) {
                return new Left(_112.value0);
            };
            if (_112 instanceof Right) {
                return Prelude["<$>"](functorEither)(_112.value0)(_113);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_114) {
        return function (_115) {
            if (_114 instanceof Left) {
                return _115;
            };
            return _114;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        altEither: altEither, 
        applicativeEither: applicativeEither, 
        applyEither: applyEither, 
        bindEither: bindEither, 
        either: either, 
        eqEither: eqEither, 
        functorEither: functorEither, 
        isLeft: isLeft, 
        isRight: isRight, 
        monadEither: monadEither, 
        ordEither: ordEither, 
        showEither: showEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice2: choice2, 
        choice3: choice3, 
        choice4: choice4, 
        choice5: choice5, 
        choice6: choice6, 
        choice7: choice7, 
        choice8: choice8, 
        choice9: choice9
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_52) {
        return new Prelude.Show(function (_136) {
            if (_136 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_52)(_136.value0) + ")");
            };
            if (_136 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_53) {
        return new Prelude.Semigroup(function (_134) {
            return function (_135) {
                if (_134 instanceof Nothing) {
                    return _135;
                };
                if (_135 instanceof Nothing) {
                    return _134;
                };
                if (_134 instanceof Just && _135 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_53)(_134.value0)(_135.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_121) {
        return function (_122) {
            return function (_123) {
                if (_123 instanceof Nothing) {
                    return _121;
                };
                if (_123 instanceof Just) {
                    return _122(_123.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_124) {
        return function (_125) {
            if (_125 instanceof Just) {
                return new Just(_124(_125.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_132) {
        return function (_133) {
            if (_133 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_132(_133));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_55) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_55))(a)(b);
            };
        }, function (_137) {
            return function (_138) {
                if (_137 instanceof Nothing && _138 instanceof Nothing) {
                    return true;
                };
                if (_137 instanceof Just && _138 instanceof Just) {
                    return Prelude["=="](__dict_Eq_55)(_137.value0)(_138.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_54) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_54["__superclass_Prelude.Eq_0"]());
        }, function (_139) {
            return function (_140) {
                if (_139 instanceof Just && _140 instanceof Just) {
                    return Prelude.compare(__dict_Ord_54)(_139.value0)(_140.value0);
                };
                if (_139 instanceof Nothing && _140 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_139 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_140 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_126) {
        return function (_127) {
            if (_126 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_126.value0)(_127);
            };
            if (_126 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_130) {
        return function (_131) {
            if (_130 instanceof Just) {
                return _131(_130.value0);
            };
            if (_130 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_128) {
        return function (_129) {
            if (_128 instanceof Nothing) {
                return _129;
            };
            return _128;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Just: Just, 
        Nothing: Nothing, 
        altMaybe: altMaybe, 
        alternativeMaybe: alternativeMaybe, 
        applicativeMaybe: applicativeMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe, 
        eqMaybe: eqMaybe, 
        extendMaybe: extendMaybe, 
        fromMaybe: fromMaybe, 
        functorMaybe: functorMaybe, 
        isJust: isJust, 
        isNothing: isNothing, 
        maybe: maybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        ordMaybe: ordMaybe, 
        plusMaybe: plusMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_143) {
        if (_143.length >= 1) {
            var _575 = _143.slice(1);
            return new Data_Maybe.Just(_575);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__159) {
            return function (__copy__160) {
                return function (__copy__161) {
                    var _159 = __copy__159;
                    var _160 = __copy__160;
                    var _161 = __copy__161;
                    tco: while (true) {
                        if (_161.length >= 1) {
                            var _580 = _161.slice(1);
                            if (_160(_161[0])) {
                                var __tco__159 = Prelude[":"](_161[0])(_159);
                                var __tco__160 = _160;
                                _159 = __tco__159;
                                _160 = __tco__160;
                                _161 = _580;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_159), 
                            rest: _161
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _581 = comp(x)(y);
                    if (_581 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_581 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_581 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_56) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_56))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_145) {
        if (_145.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_152) {
        return function (_153) {
            if (_153.length === 0) {
                return [  ];
            };
            if (_153.length >= 1) {
                var _586 = _153.slice(1);
                return Prelude[":"](_153[0])(nubBy(_152)(filter(function (y) {
                    return !_152(_153[0])(y);
                })(_586)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_57) {
        return nubBy(Prelude["=="](__dict_Eq_57));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__142) {
        var _142 = __copy__142;
        tco: while (true) {
            if (_142.length >= 1) {
                var _589 = _142.slice(1);
                if (_589.length === 0) {
                    return new Data_Maybe.Just(_142[0]);
                };
            };
            if (_142.length >= 1) {
                var _591 = _142.slice(1);
                _142 = _591;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_149) {
        return function (_150) {
            return function (_151) {
                if (_150.length === 0) {
                    return [  ];
                };
                if (_151.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_149(x))(_151) >= 0;
                };
                return filter(el)(_150);
            };
        };
    };
    var intersect = function (__dict_Eq_58) {
        return intersectBy(Prelude["=="](__dict_Eq_58));
    };
    var init = function (_144) {
        if (_144.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_144) - 1)(_144));
    };
    var head = function (_141) {
        if (_141.length >= 1) {
            var _598 = _141.slice(1);
            return new Data_Maybe.Just(_141[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__156) {
            return function (__copy__157) {
                return function (__copy__158) {
                    var _156 = __copy__156;
                    var _157 = __copy__157;
                    var _158 = __copy__158;
                    tco: while (true) {
                        if (_158.length === 0) {
                            return reverse(_156);
                        };
                        if (_158.length >= 1) {
                            var _603 = _158.slice(1);
                            var sp = span(_157(_158[0]))(_603);
                            var __tco__156 = Prelude[":"](Prelude[":"](_158[0])(sp.init))(_156);
                            var __tco__157 = _157;
                            _156 = __tco__156;
                            _157 = __tco__157;
                            _158 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_59) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_59))(xs);
        };
    };
    var group$prime = function (__dict_Ord_60) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_60["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_60));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_61) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_61)(x));
        };
    };
    var elemIndex = function (__dict_Eq_62) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_62)(x));
        };
    };
    var deleteBy = function (_146) {
        return function (_147) {
            return function (_148) {
                if (_148.length === 0) {
                    return [  ];
                };
                var _607 = findIndex(_146(_147))(_148);
                if (_607 < 0) {
                    return _148;
                };
                return deleteAt(_607)(1)(_148);
            };
        };
    };
    var $$delete = function (__dict_Eq_63) {
        return deleteBy(Prelude["=="](__dict_Eq_63));
    };
    var $bslash$bslash = function (__dict_Eq_64) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__154) {
                    return function (__copy__155) {
                        var _154 = __copy__154;
                        var _155 = __copy__155;
                        tco: while (true) {
                            if (_155.length === 0) {
                                return _154;
                            };
                            if (_154.length === 0) {
                                return [  ];
                            };
                            if (_155.length >= 1) {
                                var _611 = _155.slice(1);
                                var __tco__154 = $$delete(__dict_Eq_64)(_155[0])(_154);
                                _154 = __tco__154;
                                _155 = _611;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        "!!": $bang$bang, 
        "..": $dot$dot, 
        "\\\\": $bslash$bslash, 
        altArray: altArray, 
        alternativeArray: alternativeArray, 
        append: append, 
        applicativeArray: applicativeArray, 
        applyArray: applyArray, 
        bindArray: bindArray, 
        catMaybes: catMaybes, 
        concat: concat, 
        concatMap: concatMap, 
        "delete": $$delete, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        drop: drop, 
        elemIndex: elemIndex, 
        elemLastIndex: elemLastIndex, 
        filter: filter, 
        findIndex: findIndex, 
        findLastIndex: findLastIndex, 
        functorArray: functorArray, 
        group: group, 
        "group'": group$prime, 
        groupBy: groupBy, 
        head: head, 
        init: init, 
        insertAt: insertAt, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        last: last, 
        length: length, 
        map: map, 
        mapMaybe: mapMaybe, 
        monadArray: monadArray, 
        monadPlusArray: monadPlusArray, 
        nub: nub, 
        nubBy: nubBy, 
        "null": $$null, 
        plusArray: plusArray, 
        range: range, 
        reverse: reverse, 
        semigroupArray: semigroupArray, 
        singleton: singleton, 
        snoc: snoc, 
        sort: sort, 
        sortBy: sortBy, 
        span: span, 
        tail: tail, 
        take: take, 
        updateAt: updateAt, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    
  function parseJSONImpl(left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  }
  ;
    
  function toForeign(value) {
    return value;
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    
  var isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
  ;
    var unsafeReadPrim = function (_162) {
        return function (_163) {
            if (tagOf(_163) === _162) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_163));
            };
            return new Data_Either.Left(new TypeMismatch(_162, tagOf(_163)));
        };
    };
    var showForeignError = new Prelude.Show(function (_165) {
        if (_165 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_165.value0 + (", found " + _165.value1));
        };
        if (_165 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_165.value0) + (": " + Prelude.show(showForeignError)(_165.value1)));
        };
        if (_165 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_165.value0) + (": " + Prelude.show(showForeignError)(_165.value1)));
        };
        if (_165 instanceof JSONError) {
            return "JSON error: " + _165.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_164) {
        if (isArray(_164)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_164));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_164)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    var eqForeignError = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqForeignError)(a)(b);
        };
    }, function (_166) {
        return function (_167) {
            if (_166 instanceof TypeMismatch && _167 instanceof TypeMismatch) {
                return _166.value0 === _167.value0 && _166.value1 === _167.value1;
            };
            if (_166 instanceof ErrorAtIndex && _167 instanceof ErrorAtIndex) {
                return _166.value0 === _167.value0 && Prelude["=="](eqForeignError)(_166.value1)(_167.value1);
            };
            if (_166 instanceof ErrorAtProperty && _167 instanceof ErrorAtProperty) {
                return _166.value0 === _167.value0 && Prelude["=="](eqForeignError)(_166.value1)(_167.value1);
            };
            if (_166 instanceof JSONError && _167 instanceof JSONError) {
                return _166.value0 === _167.value0;
            };
            return false;
        };
    });
    return {
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        TypeMismatch: TypeMismatch, 
        eqForeignError: eqForeignError, 
        isArray: isArray, 
        isNull: isNull, 
        isUndefined: isUndefined, 
        parseJSON: parseJSON, 
        readArray: readArray, 
        readBoolean: readBoolean, 
        readNumber: readNumber, 
        readString: readString, 
        showForeignError: showForeignError, 
        tagOf: tagOf, 
        toForeign: toForeign, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function ready(func) {
    return function () {
      jQuery(document).ready(func);
    };
  }
  ;
    
  function select(selector) {
    return function () {
      return jQuery(selector);
    };
  }
  ;
    
  function find(selector) {
    return function(ob) {
      return function () {
        return ob.find(selector);
      };
    };
  }
  ;
    
  function parent(ob) {
    return function () {
      return ob.parent();
    };
  }
  ;
    
  function closest(selector) {
    return function(ob) {
      return function () {
        return ob.closest(selector);
      };
    };
  }
  ;
    
  function create(html) {
    return function () {
      return jQuery(html);
    };
  }
  ;
    
  function setAttr(attr) {
    return function(val) {
      return function(ob) {
        return function () {
          return ob.attr(attr, val);
        };
      };
    };
  }
  ;
    
  function attr(attrs) {
    return function(ob) {
      return function () {
        return ob.attr(attrs);
      };
    };
  }
  ;
    
  function css(props) {
    return function(ob) {
      return function () {
        return ob.css(props);
      };
    };
  }
  ;
    
  function hasClass(cls) {
    return function(ob) {
      return function () {
        return ob.hasClass(cls);
      };
    };
  }
  ;
    
  function addClass(cls) {
    return function(ob) {
      return function () {
        return ob.addClass(cls);
      };
    };
  }
  ;
    
  function removeClass(cls) {
    return function(ob) {
      return function () {
        return ob.removeClass(cls);
      };
    };
  }
  ;
    
  function setProp(p) {
    return function(val) {
      return function(ob) {
        return function () {
          return ob.prop(p, val);
        };
      };
    };
  }
  ;
    
  function getProp(p) {
    return function(ob) {
      return function () {
        return ob.prop(p);
      };
    };
  }
  ;
    
  function append(ob1) {
    return function(ob) {
      return function () {
        return ob.append(ob1);
      };
    };
  }
  ;
    
  function appendAtIndex(i) {
    return function(ob1) {
      return function(ob) {
        return function () {
          var children = ob.children();
          if (children.length > 0) {
            if (i <= 0) {
               ob.prepend(ob1);
            } else if (i >= children.length) {
               ob.append(ob1);
            } else {
               ob1.insertBefore(jQuery(children[i]));
            }
            return ob;
          } else {
            return ob.append(ob1);
          }
        };
      };
    };
  }
  ;
    
  function remove(ob) {
    return function () {
      return ob.remove();
    };
  }
  ;
    
  function clear(ob) {
    return function () {
      return ob.empty();
    };
  }
  ;
    
  function before(ob) {
    return function(ob1) {
      return function () {
        return ob1.before(ob);
      };
    };
  }
  ;
    
  function appendText(s) {
    return function(ob) {
      return function () {
        return ob.append(s);
      };
    };
  }
  ;
    
  function body() {
    return jQuery(document.body);
  }
  ;
    
  function getText(ob) {
    return function() {
      return ob.text();
    };
  }
  ;
    
  function setText(text) {
    return function(ob) {
      return function() {
        return ob.text(text);
      };
    };
  }
  ;
    
  function getValue(ob) {
    return function() {
      return ob.val();
    };
  }
  ;
    
  function setValue(val) {
    return function(ob) {
      return function() {
        return ob.val(val);
      };
    };
  }
  ;
    
  function on(evt) {
    return function(act) {
      return function(ob) {
        return function() {
          return ob.on(evt, function(e) {
            act(e)(jQuery(this))();
          });
        };
      };
    };
  }
  ;
    
  function on$prime(evt) {
    return function(sel) {
      return function(act) {
        return function(ob) {
          return function() {
            return ob.on(evt, sel, function(e) {
              act(e)(jQuery(this))();
            });
          };
        };
      };
    };
  }
  ;
    
  function preventDefault(e) {
    return function() {
      e.preventDefault();
    };
  }
  ;
    
  function stopPropagation(e) {
    return function() {
      e.stopPropagation();
    };
  }
  ;
    
  function stopImmediatePropagation(e) {
    return function() {
      e.stopImmediatePropagation();
    };
  }
  ;
    return {
        addClass: addClass, 
        append: append, 
        appendAtIndex: appendAtIndex, 
        appendText: appendText, 
        attr: attr, 
        before: before, 
        body: body, 
        clear: clear, 
        closest: closest, 
        create: create, 
        css: css, 
        find: find, 
        getProp: getProp, 
        getText: getText, 
        getValue: getValue, 
        hasClass: hasClass, 
        on: on, 
        "on'": on$prime, 
        parent: parent, 
        preventDefault: preventDefault, 
        ready: ready, 
        remove: remove, 
        removeClass: removeClass, 
        select: select, 
        setAttr: setAttr, 
        setProp: setProp, 
        setText: setText, 
        setValue: setValue, 
        stopImmediatePropagation: stopImmediatePropagation, 
        stopPropagation: stopPropagation
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    function Index($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_170) {
        return function (_171) {
            if (Data_Foreign.isNull(_171)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_171)) {
                return false;
            };
            if (Data_Foreign.typeOf(_171) === "object" || Data_Foreign.typeOf(_171) === "function") {
                return unsafeHasProperty(_170, _171);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_168) {
        return function (_169) {
            if (Data_Foreign.isNull(_169)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_169)) {
                return false;
            };
            if (Data_Foreign.typeOf(_169) === "object" || Data_Foreign.typeOf(_169) === "function") {
                return unsafeHasOwnProperty(_168, _169);
            };
            return false;
        };
    };
    var indexNumber = new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        "!": $bang, 
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        index: index, 
        indexNumber: indexNumber, 
        indexString: indexString, 
        prop: prop
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  var unsafeKeys = Object.keys || function(value) {
    var keys = [];
    for (var prop in value) {
      if (Object.prototype.hasOwnProperty.call(value, prop)) {
        keys.push(prop);
      }
    }
    return keys;
  };
  ;
    var keys = function (_172) {
        if (Data_Foreign.isNull(_172)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_172)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_172) === "object") {
            return Data_Either.Right.create(unsafeKeys(_172));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_172)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Openspace_Network_Socket = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Rx_Observable = PS.Rx_Observable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function SocketError() {

    };
    SocketError.value = new SocketError();
    function Socket() {

    };
    Socket.value = new Socket();
    function EmptySocket() {

    };
    EmptySocket.value = new EmptySocket();
    
function getSocket(url){
    return io(url);
}
;
    
function socketObserver(channel){
  return function(socket){
    return function(){
      var __slice = [].slice;
      var subj;
      subj = new Rx.Subject();
      subj.callback = function(msg) {
        return subj.onNext(msg);
      };
      socket.on(channel, subj.callback);
      return subj;
    }
  }
}
;
    
function emitAction(socket){
  return function (action){
    return function(){
      socket.emit('message', action)
    }
  }
}
;
    var socketObserver$prime = function (_173) {
        return function (_174) {
            if (_174 instanceof EmptySocket) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(Rx_Observable.empty);
            };
            return socketObserver(_173)(_174);
        };
    };
    return {
        EmptySocket: EmptySocket, 
        Socket: Socket, 
        SocketError: SocketError, 
        emitAction: emitAction, 
        getSocket: getSocket, 
        socketObserver: socketObserver, 
        "socketObserver'": socketObserver$prime
    };
})();
var PS = PS || {};
PS.Rx_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function liveAsObservable(evt) {
    return function(sel) {
      return function(ob) {
        return function() {
          return ob.onAsObservable(evt, sel);
        }
      }
    }
  }
  ;
    
  function onAsObservable(evt) {
    return function(ob) {
      return function() {
        return ob.onAsObservable(evt);
      }
    }
  }
  ;
    return {
        liveAsObservable: liveAsObservable, 
        onAsObservable: onAsObservable
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
    var pushSTArray = function (arr) {
        return function (a) {
            return pushSTArrayImpl(arr, a);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        emptySTArray: emptySTArray, 
        peekSTArray: peekSTArray, 
        pokeSTArray: pokeSTArray, 
        pushSTArray: pushSTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Null = {
        create: function (value) {
            return value;
        }
    };
    var runNull = function (_175) {
        return _175;
    };
    var readNull = function (_176) {
        return function (_177) {
            if (Data_Foreign.isNull(_177)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Null.create)(Data_Maybe.Just.create))(_176(_177));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var NullOrUndefined = {
        create: function (value) {
            return value;
        }
    };
    var runNullOrUndefined = function (_178) {
        return _178;
    };
    var readNullOrUndefined = function (_179) {
        return function (_180) {
            if (Data_Foreign.isNull(_180) || Data_Foreign.isUndefined(_180)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(NullOrUndefined.create)(Data_Maybe.Just.create))(_179(_180));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Undefined = {
        create: function (value) {
            return value;
        }
    };
    var runUndefined = function (_181) {
        return _181;
    };
    var readUndefined = function (_182) {
        return function (_183) {
            if (Data_Foreign.isUndefined(_183)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Undefined.create)(Data_Maybe.Just.create))(_182(_183));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_184) {
        if (_184 instanceof Data_Maybe.Just) {
            return _184.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_186) {
        if (_186.length >= 1) {
            var _659 = _186.slice(1);
            return _659;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_185) {
        if (_185.length >= 1) {
            var _662 = _185.slice(1);
            return _185[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        head: head, 
        init: init, 
        last: last, 
        tail: tail
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_65) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_65);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_66) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_66["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_66)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArr: monoidArr, 
        monoidArray: monoidArray, 
        monoidMaybe: monoidMaybe, 
        monoidString: monoidString, 
        monoidUnit: monoidUnit
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = new Prelude.Show(function (_192) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_192) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_193) {
        return function (_194) {
            return _193 && _194;
        };
    });
    var runAll = function (_187) {
        return _187;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_190) {
        return function (_191) {
            return _190 !== _191;
        };
    }, function (_188) {
        return function (_189) {
            return _188 === _189;
        };
    });
    return {
        All: All, 
        eqAll: eqAll, 
        monoidAll: monoidAll, 
        runAll: runAll, 
        semigroupAll: semigroupAll, 
        showAll: showAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = new Prelude.Show(function (_200) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_200) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_201) {
        return function (_202) {
            return _201 || _202;
        };
    });
    var runAny = function (_195) {
        return _195;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_198) {
        return function (_199) {
            return _198 !== _199;
        };
    }, function (_196) {
        return function (_197) {
            return _196 === _197;
        };
    });
    return {
        Any: Any, 
        eqAny: eqAny, 
        monoidAny: monoidAny, 
        runAny: runAny, 
        semigroupAny: semigroupAny, 
        showAny: showAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_67) {
        return new Prelude.Show(function (_210) {
            return "Dual (" + (Prelude.show(__dict_Show_67)(_210) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_68) {
        return new Prelude.Semigroup(function (_211) {
            return function (_212) {
                return Prelude["<>"](__dict_Semigroup_68)(_212)(_211);
            };
        });
    };
    var runDual = function (_203) {
        return _203;
    };
    var monoidDual = function (__dict_Monoid_70) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_70["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_70));
    };
    var eqDual = function (__dict_Eq_71) {
        return new Prelude.Eq(function (_206) {
            return function (_207) {
                return Prelude["/="](__dict_Eq_71)(_206)(_207);
            };
        }, function (_204) {
            return function (_205) {
                return Prelude["=="](__dict_Eq_71)(_204)(_205);
            };
        });
    };
    var ordDual = function (__dict_Ord_69) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_69["__superclass_Prelude.Eq_0"]());
        }, function (_208) {
            return function (_209) {
                return Prelude.compare(__dict_Ord_69)(_208)(_209);
            };
        });
    };
    return {
        Dual: Dual, 
        eqDual: eqDual, 
        monoidDual: monoidDual, 
        ordDual: ordDual, 
        runDual: runDual, 
        semigroupDual: semigroupDual, 
        showDual: showDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = new Prelude.Semigroup(function (_214) {
        return function (_215) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_214)(_215);
        };
    });
    var runEndo = function (_213) {
        return _213;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        monoidEndo: monoidEndo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = new Prelude.Show(function (_223) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_223) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_224) {
        return function (_225) {
            return _224 * _225;
        };
    });
    var runProduct = function (_216) {
        return _216;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_219) {
        return function (_220) {
            return _219 !== _220;
        };
    }, function (_217) {
        return function (_218) {
            return _217 === _218;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_221) {
        return function (_222) {
            return Prelude.compare(Prelude.ordNumber)(_221)(_222);
        };
    });
    return {
        Product: Product, 
        eqProduct: eqProduct, 
        monoidProduct: monoidProduct, 
        ordProduct: ordProduct, 
        runProduct: runProduct, 
        semigroupProduct: semigroupProduct, 
        showProduct: showProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = new Prelude.Show(function (_233) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_233) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_234) {
        return function (_235) {
            return _234 + _235;
        };
    });
    var runSum = function (_226) {
        return _226;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_229) {
        return function (_230) {
            return _229 !== _230;
        };
    }, function (_227) {
        return function (_228) {
            return _227 === _228;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_231) {
        return function (_232) {
            return Prelude.compare(Prelude.ordNumber)(_231)(_232);
        };
    });
    return {
        Sum: Sum, 
        eqSum: eqSum, 
        monoidSum: monoidSum, 
        ordSum: ordSum, 
        runSum: runSum, 
        semigroupSum: semigroupSum, 
        showSum: showSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_240) {
        if (_240.length >= 1) {
            var _719 = _240.slice(1);
            var _713 = unzip(_719);
            return new Tuple(Prelude[":"]((_240[0]).value0)(_713.value0), Prelude[":"]((_240[0]).value1)(_713.value1));
        };
        if (_240.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_238) {
        return function (_239) {
            return _238(_239.value0)(_239.value1);
        };
    };
    var swap = function (_241) {
        return new Tuple(_241.value1, _241.value0);
    };
    var snd = function (_237) {
        return _237.value1;
    };
    var showTuple = function (__dict_Show_72) {
        return function (__dict_Show_73) {
            return new Prelude.Show(function (_242) {
                return "Tuple (" + (Prelude.show(__dict_Show_72)(_242.value0) + (") (" + (Prelude.show(__dict_Show_73)(_242.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_247) {
        return function (_248) {
            return new Tuple(_248.value0, _247.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_74) {
        return function (__dict_Semigroup_75) {
            return new Prelude.Semigroup(function (_249) {
                return function (_250) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_74)(_249.value0)(_250.value0), Prelude["<>"](__dict_Semigroup_75)(_249.value1)(_250.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_78) {
        return function (__dict_Monoid_79) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_78["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_79["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_78), Data_Monoid.mempty(__dict_Monoid_79)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_251) {
        return function (_252) {
            return new Tuple(_252.value0, _251(_252.value1));
        };
    });
    var fst = function (_236) {
        return _236.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_81) {
        return function (__dict_Lazy1_82) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_81)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_82)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_83) {
        return function (__dict_Lazy2_84) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_83)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_84)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_85) {
        return function (__dict_Lazy_86) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_85)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_86)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_257) {
        return function (_258) {
            return new Tuple(_258.value0, _257(_258));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_87) {
        return function (__dict_Eq_88) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_87)(__dict_Eq_88))(t1)(t2);
                };
            }, function (_243) {
                return function (_244) {
                    return Prelude["=="](__dict_Eq_87)(_243.value0)(_244.value0) && Prelude["=="](__dict_Eq_88)(_243.value1)(_244.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_76) {
        return function (__dict_Ord_77) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_76["__superclass_Prelude.Eq_0"]())(__dict_Ord_77["__superclass_Prelude.Eq_0"]());
            }, function (_245) {
                return function (_246) {
                    var _764 = Prelude.compare(__dict_Ord_76)(_245.value0)(_246.value0);
                    if (_764 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_77)(_245.value1)(_246.value1);
                    };
                    return _764;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_90) {
        return new Prelude.Apply(function (_253) {
            return function (_254) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_90)(_253.value0)(_254.value0), _253.value1(_254.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_89) {
        return new Prelude.Bind(function (_255) {
            return function (_256) {
                var _777 = _256(_255.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_89)(_255.value0)(_777.value0), _777.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_89);
        });
    };
    var applicativeTuple = function (__dict_Monoid_91) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_91["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_91)));
    };
    var monadTuple = function (__dict_Monoid_80) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_80);
        }, function () {
            return bindTuple(__dict_Monoid_80["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        applicativeTuple: applicativeTuple, 
        applyTuple: applyTuple, 
        bindTuple: bindTuple, 
        comonadTuple: comonadTuple, 
        curry: curry, 
        eqTuple: eqTuple, 
        extendTuple: extendTuple, 
        fst: fst, 
        functorTuple: functorTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple, 
        lazyTuple: lazyTuple, 
        monadTuple: monadTuple, 
        monoidTuple: monoidTuple, 
        ordTuple: ordTuple, 
        semigroupTuple: semigroupTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        showTuple: showTuple, 
        snd: snd, 
        swap: swap, 
        uncurry: uncurry, 
        unzip: unzip, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Cardinality = {
        create: function (value) {
            return value;
        }
    };
    function Enum(__superclass_Prelude$dotOrd_0, cardinality, firstEnum, lastEnum, pred, succ) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
    };
    var succ = function (dict) {
        return dict.succ;
    };
    var runCardinality = function (_259) {
        return _259;
    };
    var tupleCardinality = function (__dict_Enum_92) {
        return function (__dict_Enum_93) {
            return function (l) {
                return function (r) {
                    return Cardinality.create(runCardinality(l) * runCardinality(r));
                };
            };
        };
    };
    var pred = function (dict) {
        return dict.pred;
    };
    var maybeCardinality = function (__dict_Enum_94) {
        return function (c) {
            return Cardinality.create(1 + runCardinality(c));
        };
    };
    var lastEnum = function (dict) {
        return dict.lastEnum;
    };
    var fromEnum = function (__dict_Enum_95) {
        return function (e) {
            return Data_Maybe.maybe(0)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(1))(fromEnum(__dict_Enum_95)))(pred(__dict_Enum_95)(e));
        };
    };
    var firstEnum = function (dict) {
        return dict.firstEnum;
    };
    var toEnum = function (__dict_Enum_96) {
        return function (_260) {
            if (_260 < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (_260 === 0) {
                return new Data_Maybe.Just(firstEnum(__dict_Enum_96));
            };
            return Prelude[">>="](Data_Maybe.bindMaybe)(toEnum(__dict_Enum_96)(_260 - 1))(succ(__dict_Enum_96));
        };
    };
    var enumChar = new Enum(function () {
        return Data_Char.ordChar;
    }, 65535 + 1, Data_Char.fromCharCode(0), Data_Char.fromCharCode(65535), function (c) {
        return Prelude["=="](Data_Char.eqChar)(c)(firstEnum(enumChar)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(-1))(Data_Char.toCharCode))(c));
    }, function (c) {
        return Prelude["=="](Data_Char.eqChar)(c)(lastEnum(enumChar)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(1))(Data_Char.toCharCode))(c));
    });
    var enumBoolean = new Enum(function () {
        return Prelude.ordBoolean;
    }, 2, false, true, function (_264) {
        if (_264) {
            return new Data_Maybe.Just(false);
        };
        return Data_Maybe.Nothing.value;
    }, function (_263) {
        if (!_263) {
            return new Data_Maybe.Just(true);
        };
        return Data_Maybe.Nothing.value;
    });
    var eitherCardinality = function (__dict_Enum_97) {
        return function (__dict_Enum_98) {
            return function (l) {
                return function (r) {
                    return Cardinality.create(runCardinality(l) + runCardinality(r));
                };
            };
        };
    };
    var cardinality = function (dict) {
        return dict.cardinality;
    };
    var enumEither = function (__dict_Enum_99) {
        return function (__dict_Enum_100) {
            return new Enum(function () {
                return Data_Either.ordEither(__dict_Enum_99["__superclass_Prelude.Ord_0"]())(__dict_Enum_100["__superclass_Prelude.Ord_0"]());
            }, eitherCardinality(__dict_Enum_99)(__dict_Enum_100)(cardinality(__dict_Enum_99))(cardinality(__dict_Enum_100)), new Data_Either.Left(firstEnum(__dict_Enum_99)), new Data_Either.Right(lastEnum(__dict_Enum_100)), function (_268) {
                if (_268 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_99)(_268.value0));
                };
                if (_268 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_99))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_100)(_268.value0));
                };
                throw new Error("Failed pattern match");
            }, function (_267) {
                if (_267 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_100))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_99)(_267.value0));
                };
                if (_267 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_100)(_267.value0));
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var enumMaybe = function (__dict_Enum_101) {
        return new Enum(function () {
            return Data_Maybe.ordMaybe(__dict_Enum_101["__superclass_Prelude.Ord_0"]());
        }, maybeCardinality(__dict_Enum_101)(cardinality(__dict_Enum_101)), Data_Maybe.Nothing.value, Data_Maybe.Just.create(lastEnum(__dict_Enum_101)), function (_262) {
            if (_262 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (_262 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_101)(_262.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_261) {
            if (_261 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_101)));
            };
            if (_261 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_101)(_261.value0));
            };
            throw new Error("Failed pattern match");
        });
    };
    var enumTuple = function (__dict_Enum_102) {
        return function (__dict_Enum_103) {
            return new Enum(function () {
                return Data_Tuple.ordTuple(__dict_Enum_102["__superclass_Prelude.Ord_0"]())(__dict_Enum_103["__superclass_Prelude.Ord_0"]());
            }, tupleCardinality(__dict_Enum_102)(__dict_Enum_103)(cardinality(__dict_Enum_102))(cardinality(__dict_Enum_103)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_102), firstEnum(__dict_Enum_103)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_102), lastEnum(__dict_Enum_103)), function (_266) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_103)))(pred(__dict_Enum_102)(_266.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_266.value0)))(pred(__dict_Enum_103)(_266.value1));
            }, function (_265) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_103)))(succ(__dict_Enum_102)(_265.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_265.value0)))(succ(__dict_Enum_103)(_265.value1));
            });
        };
    };
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        cardinality: cardinality, 
        enumBoolean: enumBoolean, 
        enumChar: enumChar, 
        enumEither: enumEither, 
        enumMaybe: enumMaybe, 
        enumTuple: enumTuple, 
        firstEnum: firstEnum, 
        fromEnum: fromEnum, 
        lastEnum: lastEnum, 
        pred: pred, 
        runCardinality: runCardinality, 
        succ: succ, 
        toEnum: toEnum
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Enum = PS.Data_Enum;
    var Global = PS.Global;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    function January() {

    };
    January.value = new January();
    function February() {

    };
    February.value = new February();
    function March() {

    };
    March.value = new March();
    function April() {

    };
    April.value = new April();
    function May() {

    };
    May.value = new May();
    function June() {

    };
    June.value = new June();
    function July() {

    };
    July.value = new July();
    function August() {

    };
    August.value = new August();
    function September() {

    };
    September.value = new September();
    function October() {

    };
    October.value = new October();
    function November() {

    };
    November.value = new November();
    function December() {

    };
    December.value = new December();
    function Sunday() {

    };
    Sunday.value = new Sunday();
    function Monday() {

    };
    Monday.value = new Monday();
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    function Thursday() {

    };
    Thursday.value = new Thursday();
    function Friday() {

    };
    Friday.value = new Friday();
    function Saturday() {

    };
    Saturday.value = new Saturday();
    function DateTime(value0) {
        this.value0 = value0;
    };
    DateTime.create = function (value0) {
        return new DateTime(value0);
    };
    function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
    function jsDateConstructor(x) {   return new Date(x); };
    function strictJsDate(Just, Nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return Nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    if (idx < 0) return Nothing;
    else return Just(date);
  };
    function jsDateFromRecord(r) {  return new Date(r.year, r.month, r.day, r.hours, r.minutes, r.seconds, r.milliseconds); };
    
  function nowImpl(f) {
    return function(){
      return f(new Date()); 
    };    
  }
  ;
    var toJSDate = function (_269) {
        return _269.value0;
    };
    var showMonth = new Prelude.Show(function (_276) {
        if (_276 instanceof January) {
            return "January";
        };
        if (_276 instanceof February) {
            return "February";
        };
        if (_276 instanceof March) {
            return "March";
        };
        if (_276 instanceof April) {
            return "April";
        };
        if (_276 instanceof May) {
            return "May";
        };
        if (_276 instanceof June) {
            return "June";
        };
        if (_276 instanceof July) {
            return "July";
        };
        if (_276 instanceof August) {
            return "August";
        };
        if (_276 instanceof September) {
            return "September";
        };
        if (_276 instanceof October) {
            return "October";
        };
        if (_276 instanceof November) {
            return "November";
        };
        if (_276 instanceof December) {
            return "December";
        };
        throw new Error("Failed pattern match");
    });
    var showDayOfWeek = new Prelude.Show(function (_281) {
        if (_281 instanceof Sunday) {
            return "Sunday";
        };
        if (_281 instanceof Monday) {
            return "Monday";
        };
        if (_281 instanceof Tuesday) {
            return "Tuesday";
        };
        if (_281 instanceof Wednesday) {
            return "Wednesday";
        };
        if (_281 instanceof Thursday) {
            return "Thursday";
        };
        if (_281 instanceof Friday) {
            return "Friday";
        };
        if (_281 instanceof Saturday) {
            return "Saturday";
        };
        throw new Error("Failed pattern match");
    });
    var now = nowImpl(DateTime.create);
    var liftDate = function (_270) {
        return function (_271) {
            return _270(_271.value0);
        };
    };
    var millisecond = liftDate(jsDateMethod("getMilliseconds"));
    var millisecondUTC = liftDate(jsDateMethod("getUTCMilliseconds"));
    var minute = liftDate(jsDateMethod("getMinutes"));
    var minuteUTC = liftDate(jsDateMethod("getUTCMinutes"));
    var second = liftDate(jsDateMethod("getSeconds"));
    var secondUTC = liftDate(jsDateMethod("getUTCSeconds"));
    var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
    var timezoneOffset = liftDate(jsDateMethod("getTimezoneOffset"));
    var toEpochMilliseconds = liftDate(jsDateMethod("getTime"));
    var liftOp = function (op) {
        return function (x) {
            return function (y) {
                return op(toEpochMilliseconds(x))(toEpochMilliseconds(y));
            };
        };
    };
    var year = liftDate(jsDateMethod("getFullYear"));
    var yearUTC = liftDate(jsDateMethod("getUTCFullYear"));
    var hourUTC = liftDate(jsDateMethod("getUTCHours"));
    var hour = liftDate(jsDateMethod("getHours"));
    var fromJSDate = function (d) {
        return Global.isNaN(jsDateMethod("getTime")(d)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(new DateTime(d));
    };
    var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var fromStringStrict = function (s) {
        return Prelude[">>="](Data_Maybe.bindMaybe)(strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
    };
    var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var eqMonth = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMonth)(a)(b);
        };
    }, function (_272) {
        return function (_273) {
            if (_272 instanceof January && _273 instanceof January) {
                return true;
            };
            if (_272 instanceof February && _273 instanceof February) {
                return true;
            };
            if (_272 instanceof March && _273 instanceof March) {
                return true;
            };
            if (_272 instanceof April && _273 instanceof April) {
                return true;
            };
            if (_272 instanceof May && _273 instanceof May) {
                return true;
            };
            if (_272 instanceof June && _273 instanceof June) {
                return true;
            };
            if (_272 instanceof July && _273 instanceof July) {
                return true;
            };
            if (_272 instanceof August && _273 instanceof August) {
                return true;
            };
            if (_272 instanceof September && _273 instanceof September) {
                return true;
            };
            if (_272 instanceof October && _273 instanceof October) {
                return true;
            };
            if (_272 instanceof November && _273 instanceof November) {
                return true;
            };
            if (_272 instanceof December && _273 instanceof December) {
                return true;
            };
            return false;
        };
    });
    var eqDayOfWeek = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqDayOfWeek)(a)(b);
        };
    }, function (_277) {
        return function (_278) {
            if (_277 instanceof Sunday && _278 instanceof Sunday) {
                return true;
            };
            if (_277 instanceof Monday && _278 instanceof Monday) {
                return true;
            };
            if (_277 instanceof Tuesday && _278 instanceof Tuesday) {
                return true;
            };
            if (_277 instanceof Wednesday && _278 instanceof Wednesday) {
                return true;
            };
            if (_277 instanceof Thursday && _278 instanceof Thursday) {
                return true;
            };
            if (_277 instanceof Friday && _278 instanceof Friday) {
                return true;
            };
            if (_277 instanceof Saturday && _278 instanceof Saturday) {
                return true;
            };
            return false;
        };
    });
    var eqDate = new Prelude.Eq(liftOp(Prelude["/="](Prelude.eqNumber)), liftOp(Prelude["=="](Prelude.eqNumber)));
    var ordDate = new Prelude.Ord(function () {
        return eqDate;
    }, liftOp(Prelude.compare(Prelude.ordNumber)));
    var ordMonth = new Prelude.Ord(function () {
        return eqMonth;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumMonth)(a))(Data_Enum.fromEnum(enumMonth)(b));
        };
    });
    var enumMonth = new Data_Enum.Enum(function () {
        return ordMonth;
    }, 12, January.value, December.value, function (_275) {
        if (_275 instanceof January) {
            return Data_Maybe.Nothing.value;
        };
        if (_275 instanceof February) {
            return new Data_Maybe.Just(January.value);
        };
        if (_275 instanceof March) {
            return new Data_Maybe.Just(February.value);
        };
        if (_275 instanceof April) {
            return new Data_Maybe.Just(March.value);
        };
        if (_275 instanceof May) {
            return new Data_Maybe.Just(April.value);
        };
        if (_275 instanceof June) {
            return new Data_Maybe.Just(May.value);
        };
        if (_275 instanceof July) {
            return new Data_Maybe.Just(June.value);
        };
        if (_275 instanceof August) {
            return new Data_Maybe.Just(July.value);
        };
        if (_275 instanceof September) {
            return new Data_Maybe.Just(August.value);
        };
        if (_275 instanceof October) {
            return new Data_Maybe.Just(September.value);
        };
        if (_275 instanceof November) {
            return new Data_Maybe.Just(October.value);
        };
        if (_275 instanceof December) {
            return new Data_Maybe.Just(November.value);
        };
        throw new Error("Failed pattern match");
    }, function (_274) {
        if (_274 instanceof January) {
            return new Data_Maybe.Just(February.value);
        };
        if (_274 instanceof February) {
            return new Data_Maybe.Just(March.value);
        };
        if (_274 instanceof March) {
            return new Data_Maybe.Just(April.value);
        };
        if (_274 instanceof April) {
            return new Data_Maybe.Just(May.value);
        };
        if (_274 instanceof May) {
            return new Data_Maybe.Just(June.value);
        };
        if (_274 instanceof June) {
            return new Data_Maybe.Just(July.value);
        };
        if (_274 instanceof July) {
            return new Data_Maybe.Just(August.value);
        };
        if (_274 instanceof August) {
            return new Data_Maybe.Just(September.value);
        };
        if (_274 instanceof September) {
            return new Data_Maybe.Just(October.value);
        };
        if (_274 instanceof October) {
            return new Data_Maybe.Just(November.value);
        };
        if (_274 instanceof November) {
            return new Data_Maybe.Just(December.value);
        };
        if (_274 instanceof December) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match");
    });
    var month = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getMonth"))));
    var monthUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getUTCMonth"))));
    var ordDayOfWeek = new Prelude.Ord(function () {
        return eqDayOfWeek;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumDayOfWeek)(a))(Data_Enum.fromEnum(enumDayOfWeek)(b));
        };
    });
    var enumDayOfWeek = new Data_Enum.Enum(function () {
        return ordDayOfWeek;
    }, 7, Sunday.value, Saturday.value, function (_280) {
        if (_280 instanceof Sunday) {
            return Data_Maybe.Nothing.value;
        };
        if (_280 instanceof Monday) {
            return new Data_Maybe.Just(Sunday.value);
        };
        if (_280 instanceof Tuesday) {
            return new Data_Maybe.Just(Monday.value);
        };
        if (_280 instanceof Wednesday) {
            return new Data_Maybe.Just(Tuesday.value);
        };
        if (_280 instanceof Thursday) {
            return new Data_Maybe.Just(Wednesday.value);
        };
        if (_280 instanceof Friday) {
            return new Data_Maybe.Just(Thursday.value);
        };
        if (_280 instanceof Saturday) {
            return new Data_Maybe.Just(Friday.value);
        };
        throw new Error("Failed pattern match");
    }, function (_279) {
        if (_279 instanceof Sunday) {
            return new Data_Maybe.Just(Monday.value);
        };
        if (_279 instanceof Monday) {
            return new Data_Maybe.Just(Tuesday.value);
        };
        if (_279 instanceof Tuesday) {
            return new Data_Maybe.Just(Wednesday.value);
        };
        if (_279 instanceof Wednesday) {
            return new Data_Maybe.Just(Thursday.value);
        };
        if (_279 instanceof Thursday) {
            return new Data_Maybe.Just(Friday.value);
        };
        if (_279 instanceof Friday) {
            return new Data_Maybe.Just(Saturday.value);
        };
        if (_279 instanceof Saturday) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match");
    });
    var dayUTC = liftDate(jsDateMethod("getUTCDate"));
    var dayOfWeekUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getUTCDay"))));
    var dayOfWeek = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getDay"))));
    var day = liftDate(jsDateMethod("getDate"));
    var dateTime = function (y) {
        return function (m) {
            return function (d) {
                return function (h) {
                    return function (n) {
                        return function (s) {
                            return function (ms) {
                                return fromJSDate(jsDateFromRecord({
                                    year: y, 
                                    month: Data_Enum.fromEnum(enumMonth)(m), 
                                    day: d, 
                                    hours: h, 
                                    minutes: n, 
                                    seconds: s, 
                                    milliseconds: ms
                                }));
                            };
                        };
                    };
                };
            };
        };
    };
    var date = function (y) {
        return function (m) {
            return function (d) {
                return dateTime(y)(m)(d)(0)(0)(0)(0);
            };
        };
    };
    return {
        April: April, 
        August: August, 
        December: December, 
        February: February, 
        January: January, 
        July: July, 
        June: June, 
        March: March, 
        May: May, 
        November: November, 
        October: October, 
        September: September, 
        date: date, 
        dateTime: dateTime, 
        day: day, 
        dayOfWeek: dayOfWeek, 
        dayOfWeekUTC: dayOfWeekUTC, 
        dayUTC: dayUTC, 
        enumDayOfWeek: enumDayOfWeek, 
        enumMonth: enumMonth, 
        eqDate: eqDate, 
        eqDayOfWeek: eqDayOfWeek, 
        eqMonth: eqMonth, 
        fromEpochMilliseconds: fromEpochMilliseconds, 
        fromJSDate: fromJSDate, 
        fromString: fromString, 
        fromStringStrict: fromStringStrict, 
        hour: hour, 
        hourUTC: hourUTC, 
        millisecond: millisecond, 
        millisecondUTC: millisecondUTC, 
        minute: minute, 
        minuteUTC: minuteUTC, 
        month: month, 
        monthUTC: monthUTC, 
        now: now, 
        ordDate: ordDate, 
        ordDayOfWeek: ordDayOfWeek, 
        ordMonth: ordMonth, 
        second: second, 
        secondUTC: secondUTC, 
        showDate: showDate, 
        showDayOfWeek: showDayOfWeek, 
        showMonth: showMonth, 
        timezoneOffset: timezoneOffset, 
        toEpochMilliseconds: toEpochMilliseconds, 
        toJSDate: toJSDate, 
        year: year, 
        yearUTC: yearUTC
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_289) {
            return f(_289.value0)(_289.value1.value0)(_289.value1.value1.value0)(_289.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value1.value1.value0)(_289.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_288) {
            return f(_288.value0)(_288.value1.value0)(_288.value1.value1.value0)(_288.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value1.value1.value0)(_288.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_287) {
            return f(_287.value0)(_287.value1.value0)(_287.value1.value1.value0)(_287.value1.value1.value1.value0)(_287.value1.value1.value1.value1.value0)(_287.value1.value1.value1.value1.value1.value0)(_287.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_286) {
            return f(_286.value0)(_286.value1.value0)(_286.value1.value1.value0)(_286.value1.value1.value1.value0)(_286.value1.value1.value1.value1.value0)(_286.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_285) {
            return f(_285.value0)(_285.value1.value0)(_285.value1.value1.value0)(_285.value1.value1.value1.value0)(_285.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_284) {
            return f(_284.value0)(_284.value1.value0)(_284.value1.value1.value0)(_284.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_283) {
            return f(_283.value0)(_283.value1.value0)(_283.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_282) {
            return f(_282.value0)(_282.value1);
        };
    };
    var con10 = function (f) {
        return function (_290) {
            return f(_290.value0)(_290.value1.value0)(_290.value1.value1.value0)(_290.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_290.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con2: con2, 
        con3: con3, 
        con4: con4, 
        con5: con5, 
        con6: con6, 
        con7: con7, 
        con8: con8, 
        con9: con9
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_104) {
        return new Prelude.Show(function (_298) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_104))(_298) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_299) {
        return function (_300) {
            if (_299 instanceof Data_Maybe.Just) {
                return _299;
            };
            return _300;
        };
    });
    var runFirst = function (_291) {
        return _291;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_106) {
        return new Prelude.Eq(function (_294) {
            return function (_295) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_106))(_294)(_295);
            };
        }, function (_292) {
            return function (_293) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_106))(_292)(_293);
            };
        });
    };
    var ordFirst = function (__dict_Ord_105) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_105["__superclass_Prelude.Eq_0"]());
        }, function (_296) {
            return function (_297) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_105))(_296)(_297);
            };
        });
    };
    return {
        First: First, 
        eqFirst: eqFirst, 
        monoidFirst: monoidFirst, 
        ordFirst: ordFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst, 
        showFirst: showFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_107) {
        return function (__dict_Foldable_108) {
            return function (f) {
                return foldr(__dict_Foldable_108)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_107["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_107)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_109) {
        return function (__dict_Foldable_110) {
            return Prelude.flip(traverse_(__dict_Applicative_109)(__dict_Foldable_110));
        };
    };
    var sequence_ = function (__dict_Applicative_111) {
        return function (__dict_Foldable_112) {
            return traverse_(__dict_Applicative_111)(__dict_Foldable_112)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_113) {
        return function (__dict_Monoid_114) {
            return function (sep) {
                return function (xs) {
                    var go = function (_334) {
                        return function (_335) {
                            if (_334.init) {
                                return {
                                    init: false, 
                                    acc: _335
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_114["__superclass_Prelude.Semigroup_0"]())(_334.acc)(Prelude["<>"](__dict_Monoid_114["__superclass_Prelude.Semigroup_0"]())(sep)(_335))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_113)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_114)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_115) {
        return function (__dict_Monoid_116) {
            return foldl(__dict_Foldable_115)(Prelude["<>"](__dict_Monoid_116["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_116));
        };
    };
    var or = function (__dict_Foldable_117) {
        return foldl(__dict_Foldable_117)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_118) {
        return foldl(__dict_Foldable_118)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_119) {
        return foldl(__dict_Foldable_119)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_120) {
        return function (_332) {
            return function (_333) {
                return _332(_333.value1);
            };
        };
    }, function (_329) {
        return function (_330) {
            return function (_331) {
                return _329(_330)(_331.value1);
            };
        };
    }, function (_326) {
        return function (_327) {
            return function (_328) {
                return _326(_328.value1)(_327);
            };
        };
    });
    var foldableRef = new Foldable(function (__dict_Monoid_121) {
        return function (_324) {
            return function (_325) {
                return _324(_325);
            };
        };
    }, function (_321) {
        return function (_322) {
            return function (_323) {
                return _321(_322)(_323);
            };
        };
    }, function (_318) {
        return function (_319) {
            return function (_320) {
                return _318(_320)(_319);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_122) {
        return function (_316) {
            return function (_317) {
                if (_317 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_122);
                };
                if (_317 instanceof Data_Maybe.Just) {
                    return _316(_317.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_313) {
        return function (_314) {
            return function (_315) {
                if (_315 instanceof Data_Maybe.Nothing) {
                    return _314;
                };
                if (_315 instanceof Data_Maybe.Just) {
                    return _313(_314)(_315.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_310) {
        return function (_311) {
            return function (_312) {
                if (_312 instanceof Data_Maybe.Nothing) {
                    return _311;
                };
                if (_312 instanceof Data_Maybe.Just) {
                    return _310(_312.value0)(_311);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_123) {
        return function (_308) {
            return function (_309) {
                if (_309 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_123);
                };
                if (_309 instanceof Data_Either.Right) {
                    return _308(_309.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_305) {
        return function (_306) {
            return function (_307) {
                if (_307 instanceof Data_Either.Left) {
                    return _306;
                };
                if (_307 instanceof Data_Either.Right) {
                    return _305(_306)(_307.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_302) {
        return function (_303) {
            return function (_304) {
                if (_304 instanceof Data_Either.Left) {
                    return _303;
                };
                if (_304 instanceof Data_Either.Right) {
                    return _302(_304.value0)(_303);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_124) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_124["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_124))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_125) {
        return function (__dict_Foldable_126) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_126)(Data_Monoid_First.monoidFirst)(function (_301) {
                        return Prelude["=="](__dict_Eq_125)(a)(_301.value0) ? new Data_Maybe.Just(_301.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_127) {
        return function (__dict_Monoid_128) {
            return foldMap(__dict_Foldable_127)(__dict_Monoid_128)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_129) {
        return function (p) {
            return function (f) {
                var _981 = foldMap(__dict_Foldable_129)(Data_Monoid.monoidArray)(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_981.length >= 1) {
                    var _983 = _981.slice(1);
                    return new Data_Maybe.Just(_981[0]);
                };
                if (_981.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_130) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_130)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_131) {
        return function (__dict_Foldable_132) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_132))(Prelude["=="](__dict_Eq_131));
        };
    };
    var notElem = function (__dict_Eq_133) {
        return function (__dict_Foldable_134) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_133)(__dict_Foldable_134)(x));
            };
        };
    };
    var and = function (__dict_Foldable_135) {
        return foldl(__dict_Foldable_135)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_136) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_136)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        all: all, 
        and: and, 
        any: any, 
        elem: elem, 
        find: find, 
        fold: fold, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        for_: for_, 
        intercalate: intercalate, 
        lookup: lookup, 
        mconcat: mconcat, 
        notElem: notElem, 
        or: or, 
        product: product, 
        sequence_: sequence_, 
        sum: sum, 
        traverse_: traverse_
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_137) {
        return new Prelude.Show(function (_343) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_137))(_343) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_344) {
        return function (_345) {
            if (_345 instanceof Data_Maybe.Just) {
                return _345;
            };
            if (_345 instanceof Data_Maybe.Nothing) {
                return _344;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_336) {
        return _336;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_139) {
        return new Prelude.Eq(function (_339) {
            return function (_340) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_139))(_339)(_340);
            };
        }, function (_337) {
            return function (_338) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_139))(_337)(_338);
            };
        });
    };
    var ordLast = function (__dict_Ord_138) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_138["__superclass_Prelude.Eq_0"]());
        }, function (_341) {
            return function (_342) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_138))(_341)(_342);
            };
        });
    };
    return {
        Last: Last, 
        eqLast: eqLast, 
        monoidLast: monoidLast, 
        ordLast: ordLast, 
        runLast: runLast, 
        semigroupLast: semigroupLast, 
        showLast: showLast
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function _new() {
    return {};
  }
  ;
    
  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    
  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
    var $$new = _new;
    var $$delete = _delete;
    return {
        "delete": $$delete, 
        "new": $$new, 
        peek: peek, 
        poke: poke
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var takeWhile = function (p) {
        return function (s) {
            return take(count(p)(s))(s);
        };
    };
    var $$null = function (s) {
        return length(s) === 0;
    };
    var uncons = function (_346) {
        if ($$null(_346)) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charAt(0)(_346), 
            tail: drop(1)(_346)
        });
    };
    var fromChar = Data_Char.charString;
    var singleton = fromChar;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt, 
        count: count, 
        drop: drop, 
        dropWhile: dropWhile, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        indexOf: indexOf, 
        "indexOf'": indexOf$prime, 
        joinWith: joinWith, 
        lastIndexOf: lastIndexOf, 
        "lastIndexOf'": lastIndexOf$prime, 
        length: length, 
        localeCompare: localeCompare, 
        "null": $$null, 
        replace: replace, 
        singleton: singleton, 
        split: split, 
        take: take, 
        takeWhile: takeWhile, 
        toCharArray: toCharArray, 
        toLower: toLower, 
        toUpper: toUpper, 
        trim: trim, 
        uncons: uncons
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags_1) {
        return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
    };
    var regex = function (source_1) {
        return function (flags_1) {
            return regex$prime(source_1)(renderFlags(flags_1));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        flags: flags, 
        match: match, 
        parseFlags: parseFlags, 
        regex: regex, 
        renderFlags: renderFlags, 
        replace: replace, 
        "replace'": replace$prime, 
        search: search, 
        showRegex: showRegex, 
        source: source, 
        split: split, 
        test: test
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var StateR = {
        create: function (value) {
            return value;
        }
    };
    var StateL = {
        create: function (value) {
            return value;
        }
    };
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_141) {
        return function (_363) {
            return Prelude["<$>"]((__dict_Applicative_141["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_363.value0))(_363.value1);
        };
    }, function (__dict_Applicative_140) {
        return function (_361) {
            return function (_362) {
                return Prelude["<$>"]((__dict_Applicative_140["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_362.value0))(_361(_362.value1));
            };
        };
    });
    var traversableRef = new Traversable(function () {
        return Data_Foldable.foldableRef;
    }, function () {
        return Data_Eq.functorRef;
    }, function (__dict_Applicative_143) {
        return function (_357) {
            return Prelude["<$>"]((__dict_Applicative_143["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_357);
        };
    }, function (__dict_Applicative_142) {
        return function (_355) {
            return function (_356) {
                return Prelude["<$>"]((__dict_Applicative_142["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_355(_356));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_145) {
        return function (_360) {
            if (_360 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_145)(Data_Maybe.Nothing.value);
            };
            if (_360 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_145["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_360.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_144) {
        return function (_358) {
            return function (_359) {
                if (_359 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_144)(Data_Maybe.Nothing.value);
                };
                if (_359 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_144["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_358(_359.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_147) {
        return function (_354) {
            if (_354 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_147)(new Data_Either.Left(_354.value0));
            };
            if (_354 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_147["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_354.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_146) {
        return function (_352) {
            return function (_353) {
                if (_353 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_146)(new Data_Either.Left(_353.value0));
                };
                if (_353 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_146["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_352(_353.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_348) {
        return _348;
    };
    var stateL = function (_347) {
        return _347;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_149) {
        return function (_351) {
            if (_351.length === 0) {
                return Prelude.pure(__dict_Applicative_149)([  ]);
            };
            if (_351.length >= 1) {
                var _1022 = _351.slice(1);
                return Prelude["<*>"](__dict_Applicative_149["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_149["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_351[0]))(sequence(traversableArray)(__dict_Applicative_149)(_1022));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_148) {
        return function (_349) {
            return function (_350) {
                if (_350.length === 0) {
                    return Prelude.pure(__dict_Applicative_148)([  ]);
                };
                if (_350.length >= 1) {
                    var _1026 = _350.slice(1);
                    return Prelude["<*>"](__dict_Applicative_148["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_148["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_349(_350[0])))(traverse(traversableArray)(__dict_Applicative_148)(_349)(_1026));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_150) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_150)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR.create(function (s) {
                var _1027 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1027.value0, f(_1027.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL.create(function (s) {
                var _1030 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1030.value0, f(_1030.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_153) {
        return function (__dict_Traversable_154) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_154)(__dict_Applicative_153)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR.create(function (s) {
                var _1033 = stateR(x)(s);
                var _1034 = stateR(f)(_1033.value0);
                return new Data_Tuple.Tuple(_1034.value0, _1034.value1(_1033.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL.create(function (s) {
                var _1039 = stateL(f)(s);
                var _1040 = stateL(x)(_1039.value0);
                return new Data_Tuple.Tuple(_1040.value0, _1039.value1(_1040.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_151) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_151)(applicativeStateR)(function (a) {
                        return StateR.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_152) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_152)(applicativeStateL)(function (a) {
                        return StateL.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        mapAccumL: mapAccumL, 
        mapAccumR: mapAccumR, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableRef: traversableRef, 
        traversableTuple: traversableTuple, 
        traverse: traverse, 
        zipWithA: zipWithA
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_155) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_155));
        };
    };
    var readWith = function (__dict_IsForeign_156) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_156)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_157) {
        return function (__dict_Index_158) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_158)(value)(prop))(readWith(__dict_IsForeign_157)(Data_Foreign_Index.errorAt(__dict_Index_158)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_159) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_159)));
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_160) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_160)));
    };
    var nullIsForeign = function (__dict_IsForeign_161) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_161)));
    };
    var foreignIsForeign = new IsForeign(function (f) {
        return Prelude["return"](Data_Either.monadEither)(f);
    });
    var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
    var arrayIsForeign = function (__dict_IsForeign_162) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_162)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        arrayIsForeign: arrayIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        foreignIsForeign: foreignIsForeign, 
        nullIsForeign: nullIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign, 
        numberIsForeign: numberIsForeign, 
        read: read, 
        readJSON: readJSON, 
        readProp: readProp, 
        readWith: readWith, 
        stringIsForeign: stringIsForeign, 
        undefinedIsForeign: undefinedIsForeign
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    function Leaf() {

    };
    Leaf.value = new Leaf();
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    var values = function (_373) {
        if (_373 instanceof Leaf) {
            return [  ];
        };
        if (_373 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_373.value0))(Prelude["++"](Data_Array.semigroupArray)([ _373.value2 ])(values(_373.value3)));
        };
        if (_373 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_373.value0))(Prelude["++"](Data_Array.semigroupArray)([ _373.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_373.value3))(Prelude["++"](Data_Array.semigroupArray)([ _373.value5 ])(values(_373.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_371) {
        if (_371 instanceof Leaf) {
            return [  ];
        };
        if (_371 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_371.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_371.value1, _371.value2) ])(toList(_371.value3)));
        };
        if (_371 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_371.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_371.value1, _371.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_371.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_371.value4, _371.value5) ])(toList(_371.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_163) {
        return function (__dict_Show_164) {
            return function (_365) {
                if (_365 instanceof Leaf) {
                    return "Leaf";
                };
                if (_365 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_163)(__dict_Show_164)(_365.value0) + (") (" + (Prelude.show(__dict_Show_163)(_365.value1) + (") (" + (Prelude.show(__dict_Show_164)(_365.value2) + (") (" + (showTree(__dict_Show_163)(__dict_Show_164)(_365.value3) + ")")))))));
                };
                if (_365 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_163)(__dict_Show_164)(_365.value0) + (") (" + (Prelude.show(__dict_Show_163)(_365.value1) + (") (" + (Prelude.show(__dict_Show_164)(_365.value2) + (") (" + (showTree(__dict_Show_163)(__dict_Show_164)(_365.value3) + (") (" + (Prelude.show(__dict_Show_163)(_365.value4) + (") (" + (Prelude.show(__dict_Show_164)(_365.value5) + (") (" + (showTree(__dict_Show_163)(__dict_Show_164)(_365.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_165) {
        return function (__dict_Show_166) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_165)(__dict_Show_166)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_167) {
        return function (__copy__367) {
            return function (__copy__368) {
                var __dict_Ord_167 = __copy___dict_Ord_167;
                var _367 = __copy__367;
                var _368 = __copy__368;
                tco: while (true) {
                    if (_368 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_368 instanceof Two && Prelude["=="](__dict_Ord_167["__superclass_Prelude.Eq_0"]())(_367)(_368.value1)) {
                        return new Data_Maybe.Just(_368.value2);
                    };
                    if (_368 instanceof Two && Prelude["<"](__dict_Ord_167)(_367)(_368.value1)) {
                        var __tco___dict_Ord_167 = __dict_Ord_167;
                        var __tco__367 = _367;
                        var __tco__368 = _368.value0;
                        __dict_Ord_167 = __tco___dict_Ord_167;
                        _367 = __tco__367;
                        _368 = __tco__368;
                        continue tco;
                    };
                    if (_368 instanceof Two) {
                        var __tco___dict_Ord_167 = __dict_Ord_167;
                        var __tco__367 = _367;
                        var __tco__368 = _368.value3;
                        __dict_Ord_167 = __tco___dict_Ord_167;
                        _367 = __tco__367;
                        _368 = __tco__368;
                        continue tco;
                    };
                    if (_368 instanceof Three && Prelude["=="](__dict_Ord_167["__superclass_Prelude.Eq_0"]())(_367)(_368.value1)) {
                        return new Data_Maybe.Just(_368.value2);
                    };
                    if (_368 instanceof Three && Prelude["=="](__dict_Ord_167["__superclass_Prelude.Eq_0"]())(_367)(_368.value4)) {
                        return new Data_Maybe.Just(_368.value5);
                    };
                    if (_368 instanceof Three && Prelude["<"](__dict_Ord_167)(_367)(_368.value1)) {
                        var __tco___dict_Ord_167 = __dict_Ord_167;
                        var __tco__367 = _367;
                        var __tco__368 = _368.value0;
                        __dict_Ord_167 = __tco___dict_Ord_167;
                        _367 = __tco__367;
                        _368 = __tco__368;
                        continue tco;
                    };
                    if (_368 instanceof Three && (Prelude["<"](__dict_Ord_167)(_368.value1)(_367) && Prelude["<="](__dict_Ord_167)(_367)(_368.value4))) {
                        var __tco___dict_Ord_167 = __dict_Ord_167;
                        var __tco__367 = _367;
                        var __tco__368 = _368.value3;
                        __dict_Ord_167 = __tco___dict_Ord_167;
                        _367 = __tco__367;
                        _368 = __tco__368;
                        continue tco;
                    };
                    if (_368 instanceof Three) {
                        var __tco___dict_Ord_167 = __dict_Ord_167;
                        var __tco__367 = _367;
                        var __tco__368 = _368.value6;
                        __dict_Ord_167 = __tco___dict_Ord_167;
                        _367 = __tco__367;
                        _368 = __tco__368;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_168) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_168)(k)(m));
            };
        };
    };
    var keys = function (_372) {
        if (_372 instanceof Leaf) {
            return [  ];
        };
        if (_372 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_372.value0))(Prelude["++"](Data_Array.semigroupArray)([ _372.value1 ])(keys(_372.value3)));
        };
        if (_372 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_372.value0))(Prelude["++"](Data_Array.semigroupArray)([ _372.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_372.value3))(Prelude["++"](Data_Array.semigroupArray)([ _372.value4 ])(keys(_372.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_366) {
        if (_366 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = new Prelude.Functor(function (_374) {
        return function (_375) {
            if (_375 instanceof Leaf) {
                return Leaf.value;
            };
            if (_375 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap)(_374)(_375.value0), _375.value1, _374(_375.value2), Prelude["<$>"](functorMap)(_374)(_375.value3));
            };
            if (_375 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap)(_374)(_375.value0), _375.value1, _374(_375.value2), Prelude["<$>"](functorMap)(_374)(_375.value3), _375.value4, _374(_375.value5), Prelude["<$>"](functorMap)(_374)(_375.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
    var map = Prelude["<$>"](functorMap);
    var fromZipper = function (__copy___dict_Ord_169) {
        return function (__copy__369) {
            return function (__copy__370) {
                var __dict_Ord_169 = __copy___dict_Ord_169;
                var _369 = __copy__369;
                var _370 = __copy__370;
                tco: while (true) {
                    if (_369.length === 0) {
                        return _370;
                    };
                    if (_369.length >= 1) {
                        var _1162 = _369.slice(1);
                        if (_369[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_169 = __dict_Ord_169;
                            var __tco__370 = new Two(_370, (_369[0]).value0, (_369[0]).value1, (_369[0]).value2);
                            __dict_Ord_169 = __tco___dict_Ord_169;
                            _369 = _1162;
                            _370 = __tco__370;
                            continue tco;
                        };
                    };
                    if (_369.length >= 1) {
                        var _1167 = _369.slice(1);
                        if (_369[0] instanceof TwoRight) {
                            var __tco___dict_Ord_169 = __dict_Ord_169;
                            var __tco__370 = new Two((_369[0]).value0, (_369[0]).value1, (_369[0]).value2, _370);
                            __dict_Ord_169 = __tco___dict_Ord_169;
                            _369 = _1167;
                            _370 = __tco__370;
                            continue tco;
                        };
                    };
                    if (_369.length >= 1) {
                        var _1175 = _369.slice(1);
                        if (_369[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_169 = __dict_Ord_169;
                            var __tco__370 = new Three(_370, (_369[0]).value0, (_369[0]).value1, (_369[0]).value2, (_369[0]).value3, (_369[0]).value4, (_369[0]).value5);
                            __dict_Ord_169 = __tco___dict_Ord_169;
                            _369 = _1175;
                            _370 = __tco__370;
                            continue tco;
                        };
                    };
                    if (_369.length >= 1) {
                        var _1183 = _369.slice(1);
                        if (_369[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_169 = __dict_Ord_169;
                            var __tco__370 = new Three((_369[0]).value0, (_369[0]).value1, (_369[0]).value2, _370, (_369[0]).value3, (_369[0]).value4, (_369[0]).value5);
                            __dict_Ord_169 = __tco___dict_Ord_169;
                            _369 = _1183;
                            _370 = __tco__370;
                            continue tco;
                        };
                    };
                    if (_369.length >= 1) {
                        var _1191 = _369.slice(1);
                        if (_369[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_169 = __dict_Ord_169;
                            var __tco__370 = new Three((_369[0]).value0, (_369[0]).value1, (_369[0]).value2, (_369[0]).value3, (_369[0]).value4, (_369[0]).value5, _370);
                            __dict_Ord_169 = __tco___dict_Ord_169;
                            _369 = _1191;
                            _370 = __tco__370;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_170) {
        var up = function (__copy___dict_Ord_171) {
            return function (__copy__381) {
                return function (__copy__382) {
                    var __dict_Ord_171 = __copy___dict_Ord_171;
                    var _381 = __copy__381;
                    var _382 = __copy__382;
                    tco: while (true) {
                        if (_381.length === 0) {
                            return new Two(_382.value0, _382.value1, _382.value2, _382.value3);
                        };
                        if (_381.length >= 1) {
                            var _1206 = _381.slice(1);
                            if (_381[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_171)(_1206)(new Three(_382.value0, _382.value1, _382.value2, _382.value3, (_381[0]).value0, (_381[0]).value1, (_381[0]).value2));
                            };
                        };
                        if (_381.length >= 1) {
                            var _1215 = _381.slice(1);
                            if (_381[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_171)(_1215)(new Three((_381[0]).value0, (_381[0]).value1, (_381[0]).value2, _382.value0, _382.value1, _382.value2, _382.value3));
                            };
                        };
                        if (_381.length >= 1) {
                            var _1227 = _381.slice(1);
                            if (_381[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_171 = __dict_Ord_171;
                                var __tco__382 = new KickUp(new Two(_382.value0, _382.value1, _382.value2, _382.value3), (_381[0]).value0, (_381[0]).value1, new Two((_381[0]).value2, (_381[0]).value3, (_381[0]).value4, (_381[0]).value5));
                                __dict_Ord_171 = __tco___dict_Ord_171;
                                _381 = _1227;
                                _382 = __tco__382;
                                continue tco;
                            };
                        };
                        if (_381.length >= 1) {
                            var _1239 = _381.slice(1);
                            if (_381[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_171 = __dict_Ord_171;
                                var __tco__382 = new KickUp(new Two((_381[0]).value0, (_381[0]).value1, (_381[0]).value2, _382.value0), _382.value1, _382.value2, new Two(_382.value3, (_381[0]).value3, (_381[0]).value4, (_381[0]).value5));
                                __dict_Ord_171 = __tco___dict_Ord_171;
                                _381 = _1239;
                                _382 = __tco__382;
                                continue tco;
                            };
                        };
                        if (_381.length >= 1) {
                            var _1251 = _381.slice(1);
                            if (_381[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_171 = __dict_Ord_171;
                                var __tco__382 = new KickUp(new Two((_381[0]).value0, (_381[0]).value1, (_381[0]).value2, (_381[0]).value3), (_381[0]).value4, (_381[0]).value5, new Two(_382.value0, _382.value1, _382.value2, _382.value3));
                                __dict_Ord_171 = __tco___dict_Ord_171;
                                _381 = _1251;
                                _382 = __tco__382;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_172) {
            return function (__copy__377) {
                return function (__copy__378) {
                    return function (__copy__379) {
                        return function (__copy__380) {
                            var __dict_Ord_172 = __copy___dict_Ord_172;
                            var _377 = __copy__377;
                            var _378 = __copy__378;
                            var _379 = __copy__379;
                            var _380 = __copy__380;
                            tco: while (true) {
                                if (_380 instanceof Leaf) {
                                    return up(__dict_Ord_172)(_377)(new KickUp(Leaf.value, _378, _379, Leaf.value));
                                };
                                if (_380 instanceof Two && Prelude["=="](__dict_Ord_172["__superclass_Prelude.Eq_0"]())(_378)(_380.value1)) {
                                    return fromZipper(__dict_Ord_172)(_377)(new Two(_380.value0, _378, _379, _380.value3));
                                };
                                if (_380 instanceof Two && Prelude["<"](__dict_Ord_172)(_378)(_380.value1)) {
                                    var __tco___dict_Ord_172 = __dict_Ord_172;
                                    var __tco__377 = Prelude[":"](new TwoLeft(_380.value1, _380.value2, _380.value3))(_377);
                                    var __tco__378 = _378;
                                    var __tco__379 = _379;
                                    var __tco__380 = _380.value0;
                                    __dict_Ord_172 = __tco___dict_Ord_172;
                                    _377 = __tco__377;
                                    _378 = __tco__378;
                                    _379 = __tco__379;
                                    _380 = __tco__380;
                                    continue tco;
                                };
                                if (_380 instanceof Two) {
                                    var __tco___dict_Ord_172 = __dict_Ord_172;
                                    var __tco__377 = Prelude[":"](new TwoRight(_380.value0, _380.value1, _380.value2))(_377);
                                    var __tco__378 = _378;
                                    var __tco__379 = _379;
                                    var __tco__380 = _380.value3;
                                    __dict_Ord_172 = __tco___dict_Ord_172;
                                    _377 = __tco__377;
                                    _378 = __tco__378;
                                    _379 = __tco__379;
                                    _380 = __tco__380;
                                    continue tco;
                                };
                                if (_380 instanceof Three && Prelude["=="](__dict_Ord_172["__superclass_Prelude.Eq_0"]())(_378)(_380.value1)) {
                                    return fromZipper(__dict_Ord_172)(_377)(new Three(_380.value0, _378, _379, _380.value3, _380.value4, _380.value5, _380.value6));
                                };
                                if (_380 instanceof Three && Prelude["=="](__dict_Ord_172["__superclass_Prelude.Eq_0"]())(_378)(_380.value4)) {
                                    return fromZipper(__dict_Ord_172)(_377)(new Three(_380.value0, _380.value1, _380.value2, _380.value3, _378, _379, _380.value6));
                                };
                                if (_380 instanceof Three && Prelude["<"](__dict_Ord_172)(_378)(_380.value1)) {
                                    var __tco___dict_Ord_172 = __dict_Ord_172;
                                    var __tco__377 = Prelude[":"](new ThreeLeft(_380.value1, _380.value2, _380.value3, _380.value4, _380.value5, _380.value6))(_377);
                                    var __tco__378 = _378;
                                    var __tco__379 = _379;
                                    var __tco__380 = _380.value0;
                                    __dict_Ord_172 = __tco___dict_Ord_172;
                                    _377 = __tco__377;
                                    _378 = __tco__378;
                                    _379 = __tco__379;
                                    _380 = __tco__380;
                                    continue tco;
                                };
                                if (_380 instanceof Three && (Prelude["<"](__dict_Ord_172)(_380.value1)(_378) && Prelude["<="](__dict_Ord_172)(_378)(_380.value4))) {
                                    var __tco___dict_Ord_172 = __dict_Ord_172;
                                    var __tco__377 = Prelude[":"](new ThreeMiddle(_380.value0, _380.value1, _380.value2, _380.value4, _380.value5, _380.value6))(_377);
                                    var __tco__378 = _378;
                                    var __tco__379 = _379;
                                    var __tco__380 = _380.value3;
                                    __dict_Ord_172 = __tco___dict_Ord_172;
                                    _377 = __tco__377;
                                    _378 = __tco__378;
                                    _379 = __tco__379;
                                    _380 = __tco__380;
                                    continue tco;
                                };
                                if (_380 instanceof Three) {
                                    var __tco___dict_Ord_172 = __dict_Ord_172;
                                    var __tco__377 = Prelude[":"](new ThreeRight(_380.value0, _380.value1, _380.value2, _380.value3, _380.value4, _380.value5))(_377);
                                    var __tco__378 = _378;
                                    var __tco__379 = _379;
                                    var __tco__380 = _380.value6;
                                    __dict_Ord_172 = __tco___dict_Ord_172;
                                    _377 = __tco__377;
                                    _378 = __tco__378;
                                    _379 = __tco__379;
                                    _380 = __tco__380;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_170)([  ]);
    };
    var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_173) {
        return function (f) {
            return function (m) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_173)(f)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var eqMap = function (__dict_Eq_174) {
        return function (__dict_Eq_175) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_174)(__dict_Eq_175))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_174)(__dict_Eq_175)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_176) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_364) {
                return insert(__dict_Ord_176)(_364.value0)(_364.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_178) {
        var up = function (__copy___dict_Ord_179) {
            return function (__copy__386) {
                return function (__copy__387) {
                    var __dict_Ord_179 = __copy___dict_Ord_179;
                    var _386 = __copy__386;
                    var _387 = __copy__387;
                    tco: while (true) {
                        if (_386.length === 0) {
                            return _387;
                        };
                        if (_386.length >= 1) {
                            var _1312 = _386.slice(1);
                            if (_386[0] instanceof TwoLeft && ((_386[0]).value2 instanceof Leaf && _387 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_179)(_1312)(new Two(Leaf.value, (_386[0]).value0, (_386[0]).value1, Leaf.value));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1317 = _386.slice(1);
                            if (_386[0] instanceof TwoRight && ((_386[0]).value0 instanceof Leaf && _387 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_179)(_1317)(new Two(Leaf.value, (_386[0]).value1, (_386[0]).value2, Leaf.value));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1326 = _386.slice(1);
                            if (_386[0] instanceof TwoLeft && (_386[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_179 = __dict_Ord_179;
                                var __tco__387 = new Three(_387, (_386[0]).value0, (_386[0]).value1, (_386[0]).value2.value0, (_386[0]).value2.value1, (_386[0]).value2.value2, (_386[0]).value2.value3);
                                __dict_Ord_179 = __tco___dict_Ord_179;
                                _386 = _1326;
                                _387 = __tco__387;
                                continue tco;
                            };
                        };
                        if (_386.length >= 1) {
                            var _1335 = _386.slice(1);
                            if (_386[0] instanceof TwoRight && (_386[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_179 = __dict_Ord_179;
                                var __tco__387 = new Three((_386[0]).value0.value0, (_386[0]).value0.value1, (_386[0]).value0.value2, (_386[0]).value0.value3, (_386[0]).value1, (_386[0]).value2, _387);
                                __dict_Ord_179 = __tco___dict_Ord_179;
                                _386 = _1335;
                                _387 = __tco__387;
                                continue tco;
                            };
                        };
                        if (_386.length >= 1) {
                            var _1347 = _386.slice(1);
                            if (_386[0] instanceof TwoLeft && (_386[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1347)(new Two(new Two(_387, (_386[0]).value0, (_386[0]).value1, (_386[0]).value2.value0), (_386[0]).value2.value1, (_386[0]).value2.value2, new Two((_386[0]).value2.value3, (_386[0]).value2.value4, (_386[0]).value2.value5, (_386[0]).value2.value6)));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1359 = _386.slice(1);
                            if (_386[0] instanceof TwoRight && (_386[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1359)(new Two(new Two((_386[0]).value0.value0, (_386[0]).value0.value1, (_386[0]).value0.value2, (_386[0]).value0.value3), (_386[0]).value0.value4, (_386[0]).value0.value5, new Two((_386[0]).value0.value6, (_386[0]).value1, (_386[0]).value2, _387)));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1367 = _386.slice(1);
                            if (_386[0] instanceof ThreeLeft && ((_386[0]).value2 instanceof Leaf && ((_386[0]).value5 instanceof Leaf && _387 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_179)(_1367)(new Three(Leaf.value, (_386[0]).value0, (_386[0]).value1, Leaf.value, (_386[0]).value3, (_386[0]).value4, Leaf.value));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1375 = _386.slice(1);
                            if (_386[0] instanceof ThreeMiddle && ((_386[0]).value0 instanceof Leaf && ((_386[0]).value5 instanceof Leaf && _387 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_179)(_1375)(new Three(Leaf.value, (_386[0]).value1, (_386[0]).value2, Leaf.value, (_386[0]).value3, (_386[0]).value4, Leaf.value));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1383 = _386.slice(1);
                            if (_386[0] instanceof ThreeRight && ((_386[0]).value0 instanceof Leaf && ((_386[0]).value3 instanceof Leaf && _387 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_179)(_1383)(new Three(Leaf.value, (_386[0]).value1, (_386[0]).value2, Leaf.value, (_386[0]).value4, (_386[0]).value5, Leaf.value));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1395 = _386.slice(1);
                            if (_386[0] instanceof ThreeLeft && (_386[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_179)(_1395)(new Two(new Three(_387, (_386[0]).value0, (_386[0]).value1, (_386[0]).value2.value0, (_386[0]).value2.value1, (_386[0]).value2.value2, (_386[0]).value2.value3), (_386[0]).value3, (_386[0]).value4, (_386[0]).value5));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1407 = _386.slice(1);
                            if (_386[0] instanceof ThreeMiddle && (_386[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_179)(_1407)(new Two(new Three((_386[0]).value0.value0, (_386[0]).value0.value1, (_386[0]).value0.value2, (_386[0]).value0.value3, (_386[0]).value1, (_386[0]).value2, _387), (_386[0]).value3, (_386[0]).value4, (_386[0]).value5));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1419 = _386.slice(1);
                            if (_386[0] instanceof ThreeMiddle && (_386[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_179)(_1419)(new Two((_386[0]).value0, (_386[0]).value1, (_386[0]).value2, new Three(_387, (_386[0]).value3, (_386[0]).value4, (_386[0]).value5.value0, (_386[0]).value5.value1, (_386[0]).value5.value2, (_386[0]).value5.value3)));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1431 = _386.slice(1);
                            if (_386[0] instanceof ThreeRight && (_386[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_179)(_1431)(new Two((_386[0]).value0, (_386[0]).value1, (_386[0]).value2, new Three((_386[0]).value3.value0, (_386[0]).value3.value1, (_386[0]).value3.value2, (_386[0]).value3.value3, (_386[0]).value4, (_386[0]).value5, _387)));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1446 = _386.slice(1);
                            if (_386[0] instanceof ThreeLeft && (_386[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1446)(new Three(new Two(_387, (_386[0]).value0, (_386[0]).value1, (_386[0]).value2.value0), (_386[0]).value2.value1, (_386[0]).value2.value2, new Two((_386[0]).value2.value3, (_386[0]).value2.value4, (_386[0]).value2.value5, (_386[0]).value2.value6), (_386[0]).value3, (_386[0]).value4, (_386[0]).value5));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1461 = _386.slice(1);
                            if (_386[0] instanceof ThreeMiddle && (_386[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1461)(new Three(new Two((_386[0]).value0.value0, (_386[0]).value0.value1, (_386[0]).value0.value2, (_386[0]).value0.value3), (_386[0]).value0.value4, (_386[0]).value0.value5, new Two((_386[0]).value0.value6, (_386[0]).value1, (_386[0]).value2, _387), (_386[0]).value3, (_386[0]).value4, (_386[0]).value5));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1476 = _386.slice(1);
                            if (_386[0] instanceof ThreeMiddle && (_386[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1476)(new Three((_386[0]).value0, (_386[0]).value1, (_386[0]).value2, new Two(_387, (_386[0]).value3, (_386[0]).value4, (_386[0]).value5.value0), (_386[0]).value5.value1, (_386[0]).value5.value2, new Two((_386[0]).value5.value3, (_386[0]).value5.value4, (_386[0]).value5.value5, (_386[0]).value5.value6)));
                            };
                        };
                        if (_386.length >= 1) {
                            var _1491 = _386.slice(1);
                            if (_386[0] instanceof ThreeRight && (_386[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_179)(_1491)(new Three((_386[0]).value0, (_386[0]).value1, (_386[0]).value2, new Two((_386[0]).value3.value0, (_386[0]).value3.value1, (_386[0]).value3.value2, (_386[0]).value3.value3), (_386[0]).value3.value4, (_386[0]).value3.value5, new Two((_386[0]).value3.value6, (_386[0]).value4, (_386[0]).value5, _387)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_180) {
            return function (__copy__389) {
                return function (__copy__390) {
                    var __dict_Ord_180 = __copy___dict_Ord_180;
                    var _389 = __copy__389;
                    var _390 = __copy__390;
                    tco: while (true) {
                        if (_390 instanceof Two && (_390.value0 instanceof Leaf && _390.value3 instanceof Leaf)) {
                            return up(__dict_Ord_180)(_389)(Leaf.value);
                        };
                        if (_390 instanceof Two) {
                            var __tco___dict_Ord_180 = __dict_Ord_180;
                            var __tco__389 = Prelude[":"](new TwoRight(_390.value0, _390.value1, _390.value2))(_389);
                            var __tco__390 = _390.value3;
                            __dict_Ord_180 = __tco___dict_Ord_180;
                            _389 = __tco__389;
                            _390 = __tco__390;
                            continue tco;
                        };
                        if (_390 instanceof Three && (_390.value0 instanceof Leaf && (_390.value3 instanceof Leaf && _390.value6 instanceof Leaf))) {
                            return up(__dict_Ord_180)(Prelude[":"](new TwoRight(Leaf.value, _390.value1, _390.value2))(_389))(Leaf.value);
                        };
                        if (_390 instanceof Three) {
                            var __tco___dict_Ord_180 = __dict_Ord_180;
                            var __tco__389 = Prelude[":"](new ThreeRight(_390.value0, _390.value1, _390.value2, _390.value3, _390.value4, _390.value5))(_389);
                            var __tco__390 = _390.value6;
                            __dict_Ord_180 = __tco___dict_Ord_180;
                            _389 = __tco__389;
                            _390 = __tco__390;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_181) {
            return function (__copy__388) {
                var __dict_Ord_181 = __copy___dict_Ord_181;
                var _388 = __copy__388;
                tco: while (true) {
                    if (_388 instanceof Two && _388.value3 instanceof Leaf) {
                        return {
                            key: _388.value1, 
                            value: _388.value2
                        };
                    };
                    if (_388 instanceof Two) {
                        var __tco___dict_Ord_181 = __dict_Ord_181;
                        var __tco__388 = _388.value3;
                        __dict_Ord_181 = __tco___dict_Ord_181;
                        _388 = __tco__388;
                        continue tco;
                    };
                    if (_388 instanceof Three && _388.value6 instanceof Leaf) {
                        return {
                            key: _388.value4, 
                            value: _388.value5
                        };
                    };
                    if (_388 instanceof Three) {
                        var __tco___dict_Ord_181 = __dict_Ord_181;
                        var __tco__388 = _388.value6;
                        __dict_Ord_181 = __tco___dict_Ord_181;
                        _388 = __tco__388;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_182) {
            return function (__copy__383) {
                return function (__copy__384) {
                    return function (__copy__385) {
                        var __dict_Ord_182 = __copy___dict_Ord_182;
                        var _383 = __copy__383;
                        var _384 = __copy__384;
                        var _385 = __copy__385;
                        tco: while (true) {
                            if (_385 instanceof Leaf) {
                                return fromZipper(__dict_Ord_182)(_383)(Leaf.value);
                            };
                            if (_385 instanceof Two && (_385.value0 instanceof Leaf && (_385.value3 instanceof Leaf && Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value1)))) {
                                return up(__dict_Ord_182)(_383)(Leaf.value);
                            };
                            if (_385 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value1)) {
                                    var max = maxNode(__dict_Ord_182)(_385.value0);
                                    return removeMaxNode(__dict_Ord_182)(Prelude[":"](new TwoLeft(max.key, max.value, _385.value3))(_383))(_385.value0);
                                };
                                if (Prelude["<"](__dict_Ord_182)(_384)(_385.value1)) {
                                    var __tco___dict_Ord_182 = __dict_Ord_182;
                                    var __tco__383 = Prelude[":"](new TwoLeft(_385.value1, _385.value2, _385.value3))(_383);
                                    var __tco__384 = _384;
                                    var __tco__385 = _385.value0;
                                    __dict_Ord_182 = __tco___dict_Ord_182;
                                    _383 = __tco__383;
                                    _384 = __tco__384;
                                    _385 = __tco__385;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_182 = __dict_Ord_182;
                                    var __tco__383 = Prelude[":"](new TwoRight(_385.value0, _385.value1, _385.value2))(_383);
                                    var __tco__384 = _384;
                                    var __tco__385 = _385.value3;
                                    __dict_Ord_182 = __tco___dict_Ord_182;
                                    _383 = __tco__383;
                                    _384 = __tco__384;
                                    _385 = __tco__385;
                                    continue tco;
                                };
                            };
                            if (_385 instanceof Three && (_385.value0 instanceof Leaf && (_385.value3 instanceof Leaf && _385.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value1)) {
                                    return fromZipper(__dict_Ord_182)(_383)(new Two(Leaf.value, _385.value4, _385.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value4)) {
                                    return fromZipper(__dict_Ord_182)(_383)(new Two(Leaf.value, _385.value1, _385.value2, Leaf.value));
                                };
                            };
                            if (_385 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value1)) {
                                    var max = maxNode(__dict_Ord_182)(_385.value0);
                                    return removeMaxNode(__dict_Ord_182)(Prelude[":"](new ThreeLeft(max.key, max.value, _385.value3, _385.value4, _385.value5, _385.value6))(_383))(_385.value0);
                                };
                                if (Prelude["=="](__dict_Ord_182["__superclass_Prelude.Eq_0"]())(_384)(_385.value4)) {
                                    var max = maxNode(__dict_Ord_182)(_385.value3);
                                    return removeMaxNode(__dict_Ord_182)(Prelude[":"](new ThreeMiddle(_385.value0, _385.value1, _385.value2, max.key, max.value, _385.value6))(_383))(_385.value3);
                                };
                                if (Prelude["<"](__dict_Ord_182)(_384)(_385.value1)) {
                                    var __tco___dict_Ord_182 = __dict_Ord_182;
                                    var __tco__383 = Prelude[":"](new ThreeLeft(_385.value1, _385.value2, _385.value3, _385.value4, _385.value5, _385.value6))(_383);
                                    var __tco__384 = _384;
                                    var __tco__385 = _385.value0;
                                    __dict_Ord_182 = __tco___dict_Ord_182;
                                    _383 = __tco__383;
                                    _384 = __tco__384;
                                    _385 = __tco__385;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_182)(_385.value1)(_384) && Prelude["<"](__dict_Ord_182)(_384)(_385.value4)) {
                                    var __tco___dict_Ord_182 = __dict_Ord_182;
                                    var __tco__383 = Prelude[":"](new ThreeMiddle(_385.value0, _385.value1, _385.value2, _385.value4, _385.value5, _385.value6))(_383);
                                    var __tco__384 = _384;
                                    var __tco__385 = _385.value3;
                                    __dict_Ord_182 = __tco___dict_Ord_182;
                                    _383 = __tco__383;
                                    _384 = __tco__384;
                                    _385 = __tco__385;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_182 = __dict_Ord_182;
                                    var __tco__383 = Prelude[":"](new ThreeRight(_385.value0, _385.value1, _385.value2, _385.value3, _385.value4, _385.value5))(_383);
                                    var __tco__384 = _384;
                                    var __tco__385 = _385.value6;
                                    __dict_Ord_182 = __tco___dict_Ord_182;
                                    _383 = __tco__383;
                                    _384 = __tco__384;
                                    _385 = __tco__385;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_178)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_376) {
            if (_376 instanceof Leaf) {
                return [ 0 ];
            };
            if (_376 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_376.value0))(allHeights(_376.value3)));
            };
            if (_376 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_376.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_376.value3))(allHeights(_376.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_183) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _1576 = f(lookup(__dict_Ord_183)(k)(m));
                    if (_1576 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_183)(k)(m);
                    };
                    if (_1576 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_183)(k)(_1576.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var unionWith = function (__dict_Ord_184) {
        return function (f) {
            return function (m1) {
                return function (m2) {
                    var go = function (_391) {
                        return function (_392) {
                            return alter(__dict_Ord_184)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_392.value1)(f(_392.value1))))(_392.value0)(_391);
                        };
                    };
                    return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
                };
            };
        };
    };
    var union = function (__dict_Ord_185) {
        return unionWith(__dict_Ord_185)(Prelude["const"]);
    };
    var semigroupMap = function (__dict_Ord_186) {
        return new Prelude.Semigroup(union(__dict_Ord_186));
    };
    var monoidMap = function (__dict_Ord_177) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMap(__dict_Ord_177);
        }, empty);
    };
    var traversableMap = function (__dict_Ord_187) {
        return new Data_Traversable.Traversable(function () {
            return foldableMap;
        }, function () {
            return functorMap;
        }, function (__dict_Applicative_189) {
            return Data_Traversable.traverse(traversableMap(__dict_Ord_187))(__dict_Applicative_189)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_188) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_188["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_188["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_187))(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_188)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_188["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_188)(f))(toList(ms))));
                };
            };
        });
    };
    var unions = function (__dict_Ord_190) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_190))(empty);
    };
    var update = function (__dict_Ord_191) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_191)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        alter: alter, 
        checkValid: checkValid, 
        "delete": $$delete, 
        empty: empty, 
        eqMap: eqMap, 
        foldableMap: foldableMap, 
        fromList: fromList, 
        functorMap: functorMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        monoidMap: monoidMap, 
        semigroupMap: semigroupMap, 
        showMap: showMap, 
        showTree: showTree, 
        singleton: singleton, 
        size: size, 
        toList: toList, 
        traversableMap: traversableMap, 
        union: union, 
        unionWith: unionWith, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Array = PS.Data_Array;
    
  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;
    
  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;
    
  function runST(f) {
    return f;
  }
  ;
    
  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;
    
  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;
    
  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    var empty = {};;
    
  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var values = _collect(function (_) {
        return function (v) {
            return v;
        };
    });
    var toList = _collect(Data_Tuple.Tuple.create);
    var thawST = _copyEff;
    var showStrMap = function (__dict_Show_192) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_192)))(toList(m));
        });
    };
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var singleton = function (k) {
        return function (v) {
            return pureST(function __do() {
                var _6 = Data_StrMap_ST["new"]();
                Data_StrMap_ST.poke(_6)(k)(v)();
                return _6;
            });
        };
    };
    var mutate = function (f) {
        return function (m) {
            return pureST(function __do() {
                var _5 = thawST(m)();
                f(_5)();
                return _5;
            });
        };
    };
    var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isSubmap = function (__dict_Eq_193) {
        return function (m1) {
            return function (m2) {
                var f = function (k) {
                    return function (v) {
                        return _lookup(false, Prelude["=="](__dict_Eq_193)(v), k, m2);
                    };
                };
                return all(f)(m1);
            };
        };
    };
    var isEmpty = all(function (_) {
        return function (__1) {
            return false;
        };
    });
    var insert = function (k) {
        return function (v) {
            return mutate(function (s) {
                return Data_StrMap_ST.poke(s)(k)(v);
            });
        };
    };
    var functorStrMap = new Prelude.Functor(function (f) {
        return function (m) {
            return _fmapStrMap(m, f);
        };
    });
    var map = Prelude["<$>"](functorStrMap);
    var fromList = function (l) {
        return pureST(function __do() {
            var _7 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_393) {
                return Data_StrMap_ST.poke(_7)(_393.value0)(_393.value1);
            })();
            return _7;
        });
    };
    var freezeST = _copyEff;
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var foldM = function (__dict_Monad_194) {
        return function (f) {
            return function (z) {
                return _foldM(Prelude[">>="](__dict_Monad_194["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_194["__superclass_Prelude.Applicative_0"]())(z));
            };
        };
    };
    var semigroupStrMap = function (__dict_Semigroup_195) {
        return new Prelude.Semigroup(function (m1) {
            return function (m2) {
                return mutate(function (s) {
                    return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                        return function (k) {
                            return function (v2) {
                                return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                    return Prelude["<>"](__dict_Semigroup_195)(v1)(v2);
                                }, k, m2));
                            };
                        };
                    })(s)(m1);
                })(m2);
            };
        });
    };
    var union = function (m) {
        return mutate(function (s) {
            return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
        });
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
    var fold = _foldM(Prelude["#"]);
    var foldMap = function (__dict_Monoid_198) {
        return function (f) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Prelude["<>"](__dict_Monoid_198["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                    };
                };
            })(Data_Monoid.mempty(__dict_Monoid_198));
        };
    };
    var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_199) {
        return function (f) {
            return foldMap(__dict_Monoid_199)(Prelude["const"](f));
        };
    }, function (f) {
        return fold(function (z) {
            return function (_) {
                return f(z);
            };
        });
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var traversableStrMap = new Data_Traversable.Traversable(function () {
        return foldableStrMap;
    }, function () {
        return functorStrMap;
    }, function (__dict_Applicative_197) {
        return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_197)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_196) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_196["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_196["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_196)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_196["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_196)(f))(toList(ms))));
            };
        };
    });
    var eqStrMap = function (__dict_Eq_200) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_200))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_200)(m1)(m2) && isSubmap(__dict_Eq_200)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return mutate(function (s) {
            return Data_StrMap_ST["delete"](s)(k);
        });
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _1588 = f(lookup(k)(m));
                if (_1588 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_1588 instanceof Data_Maybe.Just) {
                    return insert(k)(_1588.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        all: all, 
        alter: alter, 
        "delete": $$delete, 
        empty: empty, 
        eqStrMap: eqStrMap, 
        fold: fold, 
        foldM: foldM, 
        foldMap: foldMap, 
        foldMaybe: foldMaybe, 
        foldableStrMap: foldableStrMap, 
        freezeST: freezeST, 
        fromList: fromList, 
        functorStrMap: functorStrMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        isSubmap: isSubmap, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        runST: runST, 
        semigroupStrMap: semigroupStrMap, 
        showStrMap: showStrMap, 
        singleton: singleton, 
        size: size, 
        thawST: thawST, 
        toList: toList, 
        traversableStrMap: traversableStrMap, 
        union: union, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function unsafeGet(m) {
    return function() {
      return m;
    }
  }
  ;
    return {
        unsafeGet: unsafeGet
    };
})();
var PS = PS || {};
PS.Data_StrMap_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function unsafeIndex(m) {
    return function(k) {
      return m[k];
    };
  }
  ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Openspace_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var Data_Map = PS.Data_Map;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    function Discussion() {

    };
    Discussion.value = new Discussion();
    function Presentation() {

    };
    Presentation.value = new Presentation();
    function Workshop() {

    };
    Workshop.value = new Workshop();
    var Topic = {
        create: function (value) {
            return value;
        }
    };
    var Room = {
        create: function (value) {
            return value;
        }
    };
    var Block = {
        create: function (value) {
            return value;
        }
    };
    var Slot = {
        create: function (value) {
            return value;
        }
    };
    function AddTopic(value0) {
        this.value0 = value0;
    };
    AddTopic.create = function (value0) {
        return new AddTopic(value0);
    };
    function DeleteTopic(value0) {
        this.value0 = value0;
    };
    DeleteTopic.create = function (value0) {
        return new DeleteTopic(value0);
    };
    function AddRoom(value0) {
        this.value0 = value0;
    };
    AddRoom.create = function (value0) {
        return new AddRoom(value0);
    };
    function DeleteRoom(value0) {
        this.value0 = value0;
    };
    DeleteRoom.create = function (value0) {
        return new DeleteRoom(value0);
    };
    function AddBlock(value0) {
        this.value0 = value0;
    };
    AddBlock.create = function (value0) {
        return new AddBlock(value0);
    };
    function DeleteBlock(value0) {
        this.value0 = value0;
    };
    DeleteBlock.create = function (value0) {
        return new DeleteBlock(value0);
    };
    function AssignTopic(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AssignTopic.create = function (value0) {
        return function (value1) {
            return new AssignTopic(value0, value1);
        };
    };
    function UnassignTopic(value0) {
        this.value0 = value0;
    };
    UnassignTopic.create = function (value0) {
        return new UnassignTopic(value0);
    };
    function ShowError(value0) {
        this.value0 = value0;
    };
    ShowError.create = function (value0) {
        return new ShowError(value0);
    };
    function NOP() {

    };
    NOP.value = new NOP();
    function AsForeign(serialize) {
        this.serialize = serialize;
    };
    var topicTypes = [ Discussion.value, Presentation.value, Workshop.value ];
    var showTopicType = new Prelude.Show(function (_394) {
        if (_394 instanceof Discussion) {
            return "Discussion";
        };
        if (_394 instanceof Presentation) {
            return "Presentation";
        };
        if (_394 instanceof Workshop) {
            return "Workshop";
        };
        throw new Error("Failed pattern match");
    });
    var showRoom = new Prelude.Show(function (_406) {
        return _406.name;
    });
    var showBlock = new Prelude.Show(function (_411) {
        return _411.description;
    });
    var showSlot = new Prelude.Show(function (_405) {
        return "{ room: " + (Prelude.show(showRoom)(_405.room) + (" block: " + (Prelude.show(showBlock)(_405.block) + "}")));
    });
    var serialize = function (dict) {
        return dict.serialize;
    };
    var myTopic5 = {
        topic: "fix", 
        typ: Discussion.value
    };
    var myTopic4 = {
        topic: "Wayyyyyyy too long name for a Topic.", 
        typ: Workshop.value
    };
    var myTopic3 = {
        topic: "Enemy of the State", 
        typ: Presentation.value
    };
    var myTopic2 = {
        topic: "Functional Javascript", 
        typ: Discussion.value
    };
    var myTopic1 = {
        topic: "Reactive Design", 
        typ: Presentation.value
    };
    var myTopic = {
        topic: "Purescript is great", 
        typ: Workshop.value
    };
    var myRoom2 = {
        name: "Köln", 
        capacity: 30
    };
    var myRoom1 = {
        name: "Hamburg", 
        capacity: 80
    };
    var myRoom = {
        name: "Berlin", 
        capacity: 100
    };
    var myBlock1 = {
        description: "Second", 
        range: {
            start: "10:00am", 
            end: "12:00am"
        }
    };
    var mySlot1 = {
        room: myRoom1, 
        block: myBlock1
    };
    var myBlock = {
        description: "First", 
        range: {
            start: "8:00am", 
            end: "10:00am"
        }
    };
    var mySlot = {
        room: myRoom, 
        block: myBlock
    };
    var foreignTopicType = new Data_Foreign_Class.IsForeign(function (val) {
        var _1594 = Data_Foreign.readString(val);
        if (_1594 instanceof Data_Either.Right && _1594.value0 === "Discussion") {
            return new Data_Either.Right(Discussion.value);
        };
        if (_1594 instanceof Data_Either.Right && _1594.value0 === "Presentation") {
            return new Data_Either.Right(Presentation.value);
        };
        if (_1594 instanceof Data_Either.Right && _1594.value0 === "Workshop") {
            return new Data_Either.Right(Workshop.value);
        };
        return Data_Either.Left.create(new Data_Foreign.JSONError("Cant read TopicType"));
    });
    var foreignTopic = new Data_Foreign_Class.IsForeign(function (val) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("topic")(val))(function (_9) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignTopicType)(Data_Foreign_Index.indexString)("typ")(val))(function (_8) {
                return Prelude["return"](Data_Either.monadEither)({
                    topic: _9, 
                    typ: _8
                });
            });
        });
    });
    var foreignRoom = new Data_Foreign_Class.IsForeign(function (val) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(val))(function (_13) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("capacity")(val))(function (_12) {
                return Prelude["return"](Data_Either.monadEither)({
                    name: _13, 
                    capacity: _12
                });
            });
        });
    });
    var foreignBlock = new Data_Foreign_Class.IsForeign(function (val) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("description")(val))(function (_16) {
            return Prelude[">>="](Data_Either.bindEither)(Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index.prop("range")(val))(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("start")))(function (_15) {
                return Prelude[">>="](Data_Either.bindEither)(Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index.prop("range")(val))(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("end")))(function (_14) {
                    return Prelude["return"](Data_Either.monadEither)({
                        description: _16, 
                        range: {
                            start: _15, 
                            end: _14
                        }
                    });
                });
            });
        });
    });
    var foreignSlot = new Data_Foreign_Class.IsForeign(function (val) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignRoom)(Data_Foreign_Index.indexString)("room")(val))(function (_11) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignBlock)(Data_Foreign_Index.indexString)("block")(val))(function (_10) {
                return Prelude["return"](Data_Either.monadEither)({
                    room: _11, 
                    block: _10
                });
            });
        });
    });
    var foreignAction = new Data_Foreign_Class.IsForeign(function (val) {
        var _1607 = Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("tag")(val);
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "AddTopic") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignTopic)(Data_Foreign_Index.indexString)("topic")(val))(function (_17) {
                return Prelude["return"](Data_Either.monadEither)(new AddTopic(_17));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "DeleteTopic") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignTopic)(Data_Foreign_Index.indexString)("topic")(val))(function (_18) {
                return Prelude["return"](Data_Either.monadEither)(new DeleteTopic(_18));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "AddRoom") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignRoom)(Data_Foreign_Index.indexString)("room")(val))(function (_19) {
                return Prelude["return"](Data_Either.monadEither)(new AddRoom(_19));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "DeleteRoom") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignRoom)(Data_Foreign_Index.indexString)("room")(val))(function (_20) {
                return Prelude["return"](Data_Either.monadEither)(new DeleteRoom(_20));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "AddBlock") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignBlock)(Data_Foreign_Index.indexString)("block")(val))(function (_21) {
                return Prelude["return"](Data_Either.monadEither)(new AddBlock(_21));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "DeleteBlock") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignBlock)(Data_Foreign_Index.indexString)("block")(val))(function (_22) {
                return Prelude["return"](Data_Either.monadEither)(new DeleteBlock(_22));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "AssignTopic") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignSlot)(Data_Foreign_Index.indexString)("slot")(val))(function (_24) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignTopic)(Data_Foreign_Index.indexString)("topic")(val))(function (_23) {
                    return Prelude["return"](Data_Either.monadEither)(new AssignTopic(_24, _23));
                });
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "UnassignTopic") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(foreignTopic)(Data_Foreign_Index.indexString)("topic")(val))(function (_25) {
                return Prelude["return"](Data_Either.monadEither)(new UnassignTopic(_25));
            });
        };
        if (_1607 instanceof Data_Either.Right && _1607.value0 === "ShowError") {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("message")(val))(function (_26) {
                return Prelude["return"](Data_Either.monadEither)(new ShowError(_26));
            });
        };
        if (_1607 instanceof Data_Either.Left) {
            return Data_Either.Right.create(new ShowError(Prelude.show(Data_Foreign.showForeignError)(_1607.value0)));
        };
        throw new Error("Failed pattern match");
    });
    var eqTopicType = new Prelude.Eq(function (tt1) {
        return function (tt2) {
            return Prelude.show(showTopicType)(tt1) !== Prelude.show(showTopicType)(tt2);
        };
    }, function (tt1) {
        return function (tt2) {
            return Prelude.show(showTopicType)(tt1) === Prelude.show(showTopicType)(tt2);
        };
    });
    var eqTopic = new Prelude.Eq(function (_397) {
        return function (_398) {
            return _397.topic !== _398.topic || Prelude["/="](eqTopicType)(_397.typ)(_398.typ);
        };
    }, function (_395) {
        return function (_396) {
            return _395.topic === _396.topic && Prelude["=="](eqTopicType)(_395.typ)(_396.typ);
        };
    });
    var eqRoom = new Prelude.Eq(function (_409) {
        return function (_410) {
            return _409.name !== _410.name;
        };
    }, function (_407) {
        return function (_408) {
            return _407.name === _408.name;
        };
    });
    var eqBlock = new Prelude.Eq(function (b1) {
        return function (b2) {
            return !Prelude["=="](eqBlock)(b1)(b2);
        };
    }, function (_412) {
        return function (_413) {
            return _412.description === _413.description && (_412.range.start === _413.range.start && _412.range.end === _413.range.end);
        };
    });
    var eqSlot = new Prelude.Eq(function (_401) {
        return function (_402) {
            return Prelude["/="](eqRoom)(_401.room)(_402.room) || Prelude["/="](eqBlock)(_401.block)(_402.block);
        };
    }, function (_399) {
        return function (_400) {
            return Prelude["=="](eqRoom)(_399.room)(_400.room) && Prelude["=="](eqBlock)(_399.block)(_400.block);
        };
    });
    var ordSlot = new Prelude.Ord(function () {
        return eqSlot;
    }, function (_403) {
        return function (_404) {
            return Prelude.compare(Prelude.ordString)(Prelude.show(showRoom)(_403.room) + Prelude.show(showBlock)(_403.block))(Prelude.show(showRoom)(_404.room) + Prelude.show(showBlock)(_404.block));
        };
    });
    var myState1 = {
        topics: [ myTopic, myTopic1, myTopic2, myTopic3, myTopic4, myTopic5 ], 
        slots: [ mySlot, mySlot1 ], 
        rooms: [ myRoom, myRoom1, myRoom2 ], 
        blocks: [ myBlock, myBlock1 ], 
        timeslots: Data_Map.fromList(ordSlot)([ new Data_Tuple.Tuple(mySlot, myTopic), new Data_Tuple.Tuple(mySlot1, myTopic1) ])
    };
    var emptyState = {
        topics: [  ], 
        rooms: [  ], 
        blocks: [  ], 
        slots: [  ], 
        timeslots: [  ]
    };
    var actionAsForeign = new AsForeign(function (_414) {
        if (_414 instanceof AddTopic) {
            return Data_Foreign.toForeign({
                tag: "AddTopic", 
                contents: {
                    topic: _414.value0.topic, 
                    typ: Prelude.show(showTopicType)(_414.value0.typ)
                }
            });
        };
        if (_414 instanceof DeleteTopic) {
            return Data_Foreign.toForeign({
                tag: "DeleteTopic", 
                contents: {
                    topic: _414.value0.topic, 
                    typ: Prelude.show(showTopicType)(_414.value0.typ)
                }
            });
        };
        if (_414 instanceof AddRoom) {
            return Data_Foreign.toForeign({
                action: "AddRoom", 
                room: _414.value0
            });
        };
        if (_414 instanceof DeleteRoom) {
            return Data_Foreign.toForeign({
                action: "DeleteRoom", 
                room: _414.value0
            });
        };
        if (_414 instanceof AddBlock) {
            return Data_Foreign.toForeign({
                action: "AddBlock", 
                block: _414.value0
            });
        };
        if (_414 instanceof DeleteBlock) {
            return Data_Foreign.toForeign({
                action: "DeleteBlock", 
                block: _414.value0
            });
        };
        if (_414 instanceof AssignTopic) {
            return Data_Foreign.toForeign({
                action: "AssignTopic", 
                topic: {
                    topic: _414.value1.topic, 
                    typ: Prelude.show(showTopicType)(_414.value1.typ)
                }, 
                slot: _414.value0
            });
        };
        if (_414 instanceof UnassignTopic) {
            return Data_Foreign.toForeign({
                action: "UnassignTopic", 
                topic: {
                    topic: _414.value0.topic, 
                    typ: Prelude.show(showTopicType)(_414.value0.typ)
                }
            });
        };
        if (_414 instanceof ShowError) {
            return Data_Foreign.toForeign({
                action: "ShowError", 
                message: _414.value0
            });
        };
        throw new Error("Failed pattern match");
    });
    return {
        AddBlock: AddBlock, 
        AddRoom: AddRoom, 
        AddTopic: AddTopic, 
        AsForeign: AsForeign, 
        AssignTopic: AssignTopic, 
        Block: Block, 
        DeleteBlock: DeleteBlock, 
        DeleteRoom: DeleteRoom, 
        DeleteTopic: DeleteTopic, 
        Discussion: Discussion, 
        NOP: NOP, 
        Presentation: Presentation, 
        Room: Room, 
        ShowError: ShowError, 
        Slot: Slot, 
        Topic: Topic, 
        UnassignTopic: UnassignTopic, 
        Workshop: Workshop, 
        actionAsForeign: actionAsForeign, 
        emptyState: emptyState, 
        eqBlock: eqBlock, 
        eqRoom: eqRoom, 
        eqSlot: eqSlot, 
        eqTopic: eqTopic, 
        eqTopicType: eqTopicType, 
        foreignAction: foreignAction, 
        foreignBlock: foreignBlock, 
        foreignRoom: foreignRoom, 
        foreignSlot: foreignSlot, 
        foreignTopic: foreignTopic, 
        foreignTopicType: foreignTopicType, 
        myBlock: myBlock, 
        myBlock1: myBlock1, 
        myRoom: myRoom, 
        myRoom1: myRoom1, 
        myRoom2: myRoom2, 
        mySlot: mySlot, 
        mySlot1: mySlot1, 
        myState1: myState1, 
        myTopic: myTopic, 
        myTopic1: myTopic1, 
        myTopic2: myTopic2, 
        myTopic3: myTopic3, 
        myTopic4: myTopic4, 
        myTopic5: myTopic5, 
        ordSlot: ordSlot, 
        serialize: serialize, 
        showBlock: showBlock, 
        showRoom: showRoom, 
        showSlot: showSlot, 
        showTopicType: showTopicType, 
        topicTypes: topicTypes
    };
})();
var PS = PS || {};
PS.Openspace_Engine = (function () {
    "use strict";
    var Data_Array = PS.Data_Array;
    var Data_Map = PS.Data_Map;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Openspace_Types = PS.Openspace_Types;
    var deleteTopic = function (t) {
        return function (as) {
            var topicslotFilter = Data_Array.filter(function (_417) {
                return Prelude["/="](Openspace_Types.eqTopic)(_417.value1)(t);
            });
            var _1658 = {};
            for (var _1659 in as) {
                if (as.hasOwnProperty(_1659)) {
                    _1658[_1659] = as[_1659];
                };
            };
            _1658.topics = Data_Array["delete"](Openspace_Types.eqTopic)(t)(as.topics);
            _1658.timeslots = Data_Map.fromList(Openspace_Types.ordSlot)(topicslotFilter(Data_Map.toList(as.timeslots)));
            return _1658;
        };
    };
    var deleteTimeslot = function (s) {
        return function (as) {
            var _1660 = {};
            for (var _1661 in as) {
                if (as.hasOwnProperty(_1661)) {
                    _1660[_1661] = as[_1661];
                };
            };
            _1660.timeslots = Data_Map["delete"](Openspace_Types.ordSlot)(s)(as.timeslots);
            return _1660;
        };
    };
    var deleteRoom = function (r) {
        return function (as) {
            var topicslotFilter = Data_Array.filter(function (_418) {
                return Prelude["/="](Openspace_Types.eqRoom)(_418.value0.room)(r);
            });
            var _1665 = {};
            for (var _1666 in as) {
                if (as.hasOwnProperty(_1666)) {
                    _1665[_1666] = as[_1666];
                };
            };
            _1665.rooms = Data_Array.filter(function (r$prime) {
                return Prelude["/="](Openspace_Types.eqRoom)(r$prime)(r);
            })(as.rooms);
            _1665.timeslots = Data_Map.fromList(Openspace_Types.ordSlot)(topicslotFilter(Data_Map.toList(as.timeslots)));
            return _1665;
        };
    };
    var deleteBlock = function (b) {
        return function (as) {
            var topicslotFilter = Data_Array.filter(function (_419) {
                return Prelude["/="](Openspace_Types.eqBlock)(_419.value0.block)(b);
            });
            var _1670 = {};
            for (var _1671 in as) {
                if (as.hasOwnProperty(_1671)) {
                    _1670[_1671] = as[_1671];
                };
            };
            _1670.blocks = Data_Array.filter(function (b$prime) {
                return Prelude["/="](Openspace_Types.eqBlock)(b$prime)(b);
            })(as.blocks);
            _1670.timeslots = Data_Map.fromList(Openspace_Types.ordSlot)(topicslotFilter(Data_Map.toList(as.timeslots)));
            return _1670;
        };
    };
    var addTopic = function (t) {
        return function (as) {
            var _1672 = {};
            for (var _1673 in as) {
                if (as.hasOwnProperty(_1673)) {
                    _1672[_1673] = as[_1673];
                };
            };
            _1672.topics = Prelude[":"](t)(as.topics);
            return _1672;
        };
    };
    var addTimeslot = function (s) {
        return function (t) {
            return function (as) {
                var topicslotFilter = Data_Array.filter(function (_416) {
                    return Prelude["/="](Openspace_Types.eqTopic)(_416.value1)(t);
                });
                var _1677 = {};
                for (var _1678 in as) {
                    if (as.hasOwnProperty(_1678)) {
                        _1677[_1678] = as[_1678];
                    };
                };
                _1677.timeslots = Data_Map.insert(Openspace_Types.ordSlot)(s)(t)(Data_Map.fromList(Openspace_Types.ordSlot)(topicslotFilter(Data_Map.toList(as.timeslots))));
                return _1677;
            };
        };
    };
    var addRoom = function (r) {
        return function (as) {
            var _1679 = {};
            for (var _1680 in as) {
                if (as.hasOwnProperty(_1680)) {
                    _1679[_1680] = as[_1680];
                };
            };
            _1679.rooms = Prelude[":"](r)(as.rooms);
            return _1679;
        };
    };
    var addBlock = function (b) {
        return function (as) {
            var _1681 = {};
            for (var _1682 in as) {
                if (as.hasOwnProperty(_1682)) {
                    _1681[_1682] = as[_1682];
                };
            };
            _1681.blocks = Prelude[":"](b)(as.blocks);
            return _1681;
        };
    };
    var evalAction = function (_420) {
        return function (_421) {
            if (_420 instanceof Openspace_Types.AddTopic) {
                return addTopic(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.DeleteTopic) {
                return deleteTopic(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.AddRoom) {
                return addRoom(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.DeleteRoom) {
                return deleteRoom(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.AddBlock) {
                return addBlock(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.DeleteBlock) {
                return deleteBlock(_420.value0)(_421);
            };
            if (_420 instanceof Openspace_Types.AssignTopic) {
                return addTimeslot(_420.value0)(_420.value1)(_421);
            };
            if (_420 instanceof Openspace_Types.UnassignTopic) {
                var topicslotFilter = Data_Array.filter(function (_415) {
                    return Prelude["/="](Openspace_Types.eqTopic)(_415.value1)(_420.value0);
                });
                var _1696 = {};
                for (var _1697 in _421) {
                    if (_421.hasOwnProperty(_1697)) {
                        _1696[_1697] = _421[_1697];
                    };
                };
                _1696.timeslots = Data_Map.fromList(Openspace_Types.ordSlot)(topicslotFilter(Data_Map.toList(_421.timeslots)));
                return _1696;
            };
            if (_420 instanceof Openspace_Types.ShowError) {
                return _421;
            };
            if (_420 instanceof Openspace_Types.NOP) {
                return _421;
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        addBlock: addBlock, 
        addRoom: addRoom, 
        addTimeslot: addTimeslot, 
        addTopic: addTopic, 
        deleteBlock: deleteBlock, 
        deleteRoom: deleteRoom, 
        deleteTimeslot: deleteTimeslot, 
        deleteTopic: deleteTopic, 
        evalAction: evalAction
    };
})();
var PS = PS || {};
PS.Openspace_Ui_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Either = PS.Data_Either;
    var Openspace_Types = PS.Openspace_Types;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foreign = PS.Data_Foreign;
    
function getDetail (e){
    return e.originalEvent.detail;
}
;
    var parseTopic = function (ft) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.read(Openspace_Types.foreignTopic)(ft))(function (_28) {
            return Prelude["return"](Data_Either.monadEither)(_28);
        });
    };
    var parseSlot = function (fs) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.read(Openspace_Types.foreignSlot)(fs))(function (_31) {
            return Prelude["return"](Data_Either.monadEither)(_31);
        });
    };
    var parseTimeslot = function (fs) {
        return function (ft) {
            return Prelude[">>="](Data_Either.bindEither)(parseSlot(fs))(function (_33) {
                return Prelude[">>="](Data_Either.bindEither)(parseTopic(ft))(function (_32) {
                    return Prelude["return"](Data_Either.monadEither)(new Data_Tuple.Tuple(_33, _32));
                });
            });
        };
    };
    var parseRoom = function (fr) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.read(Openspace_Types.foreignRoom)(fr))(function (_29) {
            return Prelude["return"](Data_Either.monadEither)(_29);
        });
    };
    var parseBlock = function (fb) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.read(Openspace_Types.foreignBlock)(fb))(function (_30) {
            return Prelude["return"](Data_Either.monadEither)(_30);
        });
    };
    var parseAction = function (fa) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.read(Openspace_Types.foreignAction)(fa))(function (_27) {
            return Prelude["return"](Data_Either.monadEither)(_27);
        });
    };
    var actionFromForeign = function (parser) {
        return function (actionConstructor) {
            return function (f) {
                var _1707 = parser(f);
                if (_1707 instanceof Data_Either.Right) {
                    return actionConstructor(_1707.value0);
                };
                if (_1707 instanceof Data_Either.Left) {
                    return new Openspace_Types.ShowError(Prelude.show(Data_Foreign.showForeignError)(_1707.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    return {
        actionFromForeign: actionFromForeign, 
        getDetail: getDetail, 
        parseAction: parseAction, 
        parseBlock: parseBlock, 
        parseRoom: parseRoom, 
        parseSlot: parseSlot, 
        parseTimeslot: parseTimeslot, 
        parseTopic: parseTopic
    };
})();
var PS = PS || {};
PS.Openspace_Ui_Emitter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Data_Map = PS.Data_Map;
    var Data_Traversable = PS.Data_Traversable;
    var Rx_Observable = PS.Rx_Observable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Tuple = PS.Data_Tuple;
    var Rx_JQuery = PS.Rx_JQuery;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var mkObservable = function (emitter) {
        return function (event) {
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Tuple.Tuple.create(event))(Rx_JQuery.onAsObservable(event)(emitter));
        };
    };
    var getEmitters = function __do() {
        var _36 = Control_Monad_JQuery.select("#menuContainer")();
        return (function () {
            var menu = Prelude["<$>"](Data_Array.functorArray)(mkObservable(_36))([ "addTopic", "dragOverTrash", "dragLeaveTrash" ]);
            return function __do() {
                var _35 = Control_Monad_JQuery.select("#topicsContainer")();
                return (function () {
                    var topic = Prelude["<$>"](Data_Array.functorArray)(mkObservable(_35))([ "dragStartTopic", "dragEndTopic" ]);
                    return function __do() {
                        var _34 = Control_Monad_JQuery.select("#gridContainer")();
                        return (function () {
                            var grid = Prelude["<$>"](Data_Array.functorArray)(mkObservable(_34))([ "dragOverSlot", "dragLeaveSlot", "addRoom", "deleteRoom", "addBlock", "deleteBlock", "dragStartGridTopic", "dragEndGridTopic" ]);
                            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Map.fromList(Prelude.ordString))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(Data_Array.append(Data_Array.append(menu)(topic))(grid)));
                        })()();
                    };
                })()();
            };
        })()();
    };
    var emitterLookup = function (es) {
        return function (s) {
            var _1713 = Data_Map.lookup(Prelude.ordString)(s)(es);
            if (_1713 instanceof Data_Maybe.Just) {
                return _1713.value0;
            };
            if (_1713 instanceof Data_Maybe.Nothing) {
                return Rx_Observable.empty;
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        emitterLookup: emitterLookup, 
        getEmitters: getEmitters, 
        mkObservable: mkObservable
    };
})();
var PS = PS || {};
PS.Openspace_Ui_Render = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Map = PS.Data_Map;
    var Openspace_Types = PS.Openspace_Types;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function renderMenu(topicTypes){
    return function(){
      React.render(
        React.createElement(Menu, {topicTypes: topicTypes}),
        document.getElementById('menu')
        );
    }
  }
  ;
    function renderTopics(topics){
    return function(){
      React.render(
        React.createElement(Topics, {topics: topics}),
        document.getElementById('topics')
        )
      }
    }
    ;
    
  function renderGrid(rooms){
    return function(blocks){
      return function(grid){
        return function(){
          React.render(
            React.createElement(Grid, {rooms: rooms, blocks: blocks, grid: grid}),
            document.getElementById('grid')
            );
          }
        }
      }
  }
  ;
    var sanitizeTopic = function (_422) {
        var _1716 = {};
        for (var _1717 in _422) {
            if (_422.hasOwnProperty(_1717)) {
                _1716[_1717] = _422[_1717];
            };
        };
        _1716.typ = Prelude.show(Openspace_Types.showTopicType)(_422.typ);
        return _1716;
    };
    var sanitizeSlot = function (_423) {
        return {
            room: Prelude.show(Openspace_Types.showRoom)(_423.room), 
            block: Prelude.show(Openspace_Types.showBlock)(_423.block)
        };
    };
    var sanitizeTimeslot = function (_424) {
        return new Data_Tuple.Tuple(sanitizeSlot(_424.value0), sanitizeTopic(_424.value1));
    };
    var sanitizeAppState = function (as) {
        var topicNotInGrid = function (t) {
            return Prelude["=="](Prelude.eqArray(Openspace_Types.eqTopic))(Data_Array.filter(function (t$prime) {
                return Prelude["=="](Openspace_Types.eqTopic)(t)(t$prime);
            })(Data_Map.values(as.timeslots)))([  ]);
        };
        return {
            topics: Prelude["<$>"](Data_Array.functorArray)(sanitizeTopic)(Data_Array.filter(topicNotInGrid)(as.topics)), 
            rooms: as.rooms, 
            blocks: Prelude["<$>"](Data_Array.functorArray)(Prelude.show(Openspace_Types.showBlock))(as.blocks), 
            slots: Prelude["<$>"](Data_Array.functorArray)(sanitizeSlot)(as.slots), 
            timeslots: Prelude["<$>"](Data_Array.functorArray)(sanitizeTimeslot)(Data_Map.toList(as.timeslots))
        };
    };
    var findIn = function (r) {
        return function (b) {
            return function (timeslots) {
                return Prelude["<#>"](Data_Maybe.functorMaybe)(Data_Map.lookup(Openspace_Types.ordSlot)({
                    block: b, 
                    room: r
                })(timeslots))(sanitizeTopic);
            };
        };
    };
    var makeGrid = function (as) {
        return Prelude["<$>"](Data_Array.functorArray)(function (r) {
            return Prelude["<$>"](Data_Array.functorArray)(function (b) {
                return findIn(r)(b)(as.timeslots);
            })(as.blocks);
        })(as.rooms);
    };
    var renderApp = function (as) {
        var as$prime = sanitizeAppState(as);
        return function __do() {
            renderTopics(as$prime.topics)();
            return renderGrid(as.rooms)(as.blocks)(makeGrid(as))();
        };
    };
    return {
        findIn: findIn, 
        makeGrid: makeGrid, 
        renderApp: renderApp, 
        renderGrid: renderGrid, 
        renderMenu: renderMenu, 
        renderTopics: renderTopics, 
        sanitizeAppState: sanitizeAppState, 
        sanitizeSlot: sanitizeSlot, 
        sanitizeTimeslot: sanitizeTimeslot, 
        sanitizeTopic: sanitizeTopic
    };
})();
var PS = PS || {};
PS.Openspace_Ui_Stream = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Openspace_Ui_Parser = PS.Openspace_Ui_Parser;
    var Openspace_Ui_Emitter = PS.Openspace_Ui_Emitter;
    var Rx_Observable = PS.Rx_Observable;
    var Openspace_Network_Socket = PS.Openspace_Network_Socket;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Openspace_Types = PS.Openspace_Types;
    var Openspace_Ui_Render = PS.Openspace_Ui_Render;
    var Openspace_Engine = PS.Openspace_Engine;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    var netStream = function (socket) {
        return function __do() {
            var _37 = Openspace_Network_Socket["socketObserver'"]("message")(socket)();
            return Prelude["<$>"](Rx_Observable.observableFunctor)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseAction)(Prelude.id(Prelude.categoryArr)))(_37);
        };
    };
    var dragStream = function __do() {
        var _40 = Openspace_Ui_Emitter.getEmitters();
        return (function () {
            var lookup = Openspace_Ui_Emitter.emitterLookup(_40);
            var dragStart = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.parseTopic)(Openspace_Ui_Parser.getDetail))(Rx_Observable.merge(lookup("dragStartTopic"))(lookup("dragStartGridTopic")));
            var dragOverTrash = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["const"](Openspace_Types.DeleteTopic.create))(lookup("dragOverTrash"));
            var dragOverSlot = Prelude["<$>"](Rx_Observable.observableFunctor)(function (e) {
                var _1724 = Openspace_Ui_Parser.parseSlot(Openspace_Ui_Parser.getDetail(e));
                if (_1724 instanceof Data_Either.Right) {
                    return Openspace_Types.AssignTopic.create(_1724.value0);
                };
                if (_1724 instanceof Data_Either.Left) {
                    return Openspace_Types.UnassignTopic.create;
                };
                throw new Error("Failed pattern match");
            })(lookup("dragOverSlot"));
            var dragLeave = Rx_Observable.delay(30)(Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["const"](Openspace_Types.UnassignTopic.create))(Rx_Observable.merge(lookup("dragLeaveSlot"))(lookup("dragLeaveTrash"))));
            var dragOver = Rx_Observable.merge(Rx_Observable.merge(dragLeave)(dragOverSlot))(dragOverTrash);
            var dragTopic = Prelude[">>="](Rx_Observable.observableBind)(dragStart)(function (_39) {
                if (_39 instanceof Data_Either.Right) {
                    return Prelude[">>="](Rx_Observable.observableBind)(dragOver)(function (_38) {
                        return Prelude[">>="](Rx_Observable.observableBind)(Rx_Observable.merge(lookup("dragEndTopic"))(lookup("dragEndGridTopic")))(function () {
                            return Prelude["return"](Rx_Observable.monadObservable)(_38(_39.value0));
                        });
                    });
                };
                throw new Error("Failed pattern match");
            });
            return Prelude["return"](Control_Monad_Eff.monadEff)(dragTopic);
        })()();
    };
    var uiStream = function __do() {
        var _42 = Openspace_Ui_Emitter.getEmitters();
        return (function () {
            var lookup = Openspace_Ui_Emitter.emitterLookup(_42);
            var removeRoom = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseRoom)(Openspace_Types.DeleteRoom.create))(Openspace_Ui_Parser.getDetail))(lookup("deleteRoom"));
            var deleteBlock = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseBlock)(Openspace_Types.DeleteBlock.create))(Openspace_Ui_Parser.getDetail))(lookup("deleteBlock"));
            var addTopic = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseTopic)(Openspace_Types.AddTopic.create))(Openspace_Ui_Parser.getDetail))(lookup("addTopic"));
            var addRoom = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseRoom)(Openspace_Types.AddRoom.create))(Openspace_Ui_Parser.getDetail))(lookup("addRoom"));
            var addBlock = Prelude["<$>"](Rx_Observable.observableFunctor)(Prelude["<<<"](Prelude.semigroupoidArr)(Openspace_Ui_Parser.actionFromForeign(Openspace_Ui_Parser.parseBlock)(Openspace_Types.AddBlock.create))(Openspace_Ui_Parser.getDetail))(lookup("addBlock"));
            var changeGrid = Rx_Observable.merge(Rx_Observable.merge(Rx_Observable.merge(addRoom)(removeRoom))(addBlock))(deleteBlock);
            return function __do() {
                var _41 = dragStream();
                return Rx_Observable.merge(Rx_Observable.merge(addTopic)(_41))(changeGrid);
            };
        })()();
    };
    var main = (function () {
        var sockEmitter = Openspace_Network_Socket.getSocket("");
        return function __do() {
            var _45 = Control_Monad_ST.newSTRef(Openspace_Types.myState1)();
            Openspace_Ui_Render.renderMenu(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(Openspace_Types.showTopicType))(Openspace_Types.topicTypes))();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_ST.readSTRef(_45))(Openspace_Ui_Render.renderApp)();
            var _44 = uiStream();
            var _43 = netStream(sockEmitter)();
            Rx_Observable.subscribe(_44)(function (a) {
                return Openspace_Network_Socket.emitAction(sockEmitter)(Openspace_Types.serialize(Openspace_Types.actionAsForeign)(a));
            })();
            var actions = Rx_Observable.merge(_44)(_43);
            return Rx_Observable.subscribe(actions)(function (a) {
                return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_ST.modifySTRef(_45)(Openspace_Engine.evalAction(a)))(Openspace_Ui_Render.renderApp);
            })();
        };
    })();
    return {
        dragStream: dragStream, 
        main: main, 
        netStream: netStream, 
        uiStream: uiStream
    };
})();
var PS = PS || {};
PS.Test_QuickCheck_Gen = (function () {
    "use strict";
    var Math = PS.Math;
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Debug_Trace = PS.Debug_Trace;
    function Gen(value0) {
        this.value0 = value0;
    };
    Gen.create = function (value0) {
        return new Gen(value0);
    };
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var runGen = function (_425) {
        return _425.value0;
    };
    var stateful = function (f) {
        return new Gen(function (s) {
            return runGen(f(s))(s);
        });
    };
    var sized = function (f) {
        return stateful(function (s) {
            return f(s.size);
        });
    };
    var variant = function (n) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1737 = {};
                    for (var _1738 in s) {
                        if (s.hasOwnProperty(_1738)) {
                            _1737[_1738] = s[_1738];
                        };
                    };
                    _1737.newSeed = n;
                    return _1737;
                })());
            });
        };
    };
    var resize = function (sz) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1739 = {};
                    for (var _1740 in s) {
                        if (s.hasOwnProperty(_1740)) {
                            _1739[_1740] = s[_1740];
                        };
                    };
                    _1739.size = sz;
                    return _1739;
                })());
            });
        };
    };
    var repeatable = function (f) {
        return Gen.create(function (s) {
            return {
                value: function (a) {
                    return (runGen(f(a))(s)).value;
                }, 
                state: s
            };
        });
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var lcgStep = (function () {
        var f = function (s) {
            return {
                value: s.newSeed, 
                state: (function () {
                    var _1741 = {};
                    for (var _1742 in s) {
                        if (s.hasOwnProperty(_1742)) {
                            _1741[_1742] = s[_1742];
                        };
                    };
                    _1741.newSeed = lcgNext(s.newSeed);
                    return _1741;
                })()
            };
        };
        return new Gen(f);
    })();
    var perturbGen = function (_426) {
        return function (_427) {
            return Gen.create(function (s) {
                return _427.value0((function () {
                    var _1745 = {};
                    for (var _1746 in s) {
                        if (s.hasOwnProperty(_1746)) {
                            _1745[_1746] = s[_1746];
                        };
                    };
                    _1745.newSeed = lcgNext(float32ToInt32(_426)) + s.newSeed;
                    return _1745;
                })());
            });
        };
    };
    var functorGen = new Prelude.Functor(function (_431) {
        return function (_432) {
            return Gen.create(function (s) {
                var _1750 = _432.value0(s);
                return {
                    value: _431(_1750.value), 
                    state: _1750.state
                };
            });
        };
    });
    var uniform = Prelude["<$>"](functorGen)(function (n) {
        return n / (1 << 30);
    })(lcgStep);
    var evalGen = function (gen) {
        return function (st) {
            return (runGen(gen)(st)).value;
        };
    };
    var choose = function (a) {
        return function (b) {
            var min = Math.min(a)(b);
            var max = Math.max(a)(b);
            return Prelude["<$>"](functorGen)(Prelude[">>>"](Prelude.semigroupoidArr)(Prelude["*"](Prelude.numNumber)(max - min))(Prelude["+"](Prelude.numNumber)(min)))(uniform);
        };
    };
    var chooseInt = function (a) {
        return function (b) {
            return Prelude["<$>"](functorGen)(Math.floor)(choose(Math.ceil(a))(Math.floor(b) + 0.9999999989999999));
        };
    };
    var applyGen = new Prelude.Apply(function (_433) {
        return function (_434) {
            return Gen.create(function (s) {
                var _1756 = _433.value0(s);
                var _1757 = _434.value0(_1756.state);
                return {
                    value: _1756.value(_1757.value), 
                    state: _1757.state
                };
            });
        };
    }, function () {
        return functorGen;
    });
    var bindGen = new Prelude.Bind(function (_435) {
        return function (_436) {
            return Gen.create(function (s) {
                var _1766 = _435.value0(s);
                return runGen(_436(_1766.value))(_1766.state);
            });
        };
    }, function () {
        return applyGen;
    });
    var frequency = function (x) {
        return function (xs) {
            var xxs = Prelude[":"](x)(xs);
            var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid_Sum.monoidSum)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Sum.Sum.create)(Data_Tuple.fst))(xxs)));
            var pick = function (_428) {
                return function (_429) {
                    return function (_430) {
                        if (_430.length === 0) {
                            return _429;
                        };
                        if (_430.length >= 1) {
                            var _1776 = _430.slice(1);
                            return _428 <= (_430[0]).value0 ? (_430[0]).value1 : pick(_428 - (_430[0]).value0)(_429)(_1776);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return Prelude[">>="](bindGen)(chooseInt(1)(total))(function (_47) {
                return pick(_47)(Data_Tuple.snd(x))(xxs);
            });
        };
    };
    var oneOf = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_46) {
                return _46 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_46 - 1));
            });
        };
    };
    var applicativeGen = new Prelude.Applicative(function () {
        return applyGen;
    }, function (a) {
        return new Gen(function (s) {
            return {
                value: a, 
                state: s
            };
        });
    });
    var elements = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_52) {
                return Prelude.pure(applicativeGen)(_52 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_52 - 1)));
            });
        };
    };
    var monadGen = new Prelude.Monad(function () {
        return applicativeGen;
    }, function () {
        return bindGen;
    });
    var vectorOf = function (k) {
        return function (g) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(applicativeGen)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](g))(Data_Array.range(1)(k)));
        };
    };
    var arrayOf = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_48) {
                return vectorOf(_48)(g);
            });
        });
    };
    var arrayOf1 = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_51) {
                return Prelude[">>="](bindGen)(g)(function (_50) {
                    return Prelude[">>="](bindGen)(vectorOf(_51 - 1)(g))(function (_49) {
                        return Prelude["return"](monadGen)(new Data_Tuple.Tuple(_50, _49));
                    });
                });
            });
        });
    };
    var sample = function (sz) {
        return function (g) {
            return evalGen(vectorOf(sz)(g))({
                newSeed: 0, 
                size: sz
            });
        };
    };
    var showSample$prime = function (__dict_Show_201) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_201))(sample(n)(g));
            };
        };
    };
    var showSample = function (__dict_Show_202) {
        return showSample$prime(__dict_Show_202)(10);
    };
    return {
        applicativeGen: applicativeGen, 
        applyGen: applyGen, 
        arrayOf: arrayOf, 
        arrayOf1: arrayOf1, 
        bindGen: bindGen, 
        choose: choose, 
        chooseInt: chooseInt, 
        elements: elements, 
        evalGen: evalGen, 
        frequency: frequency, 
        functorGen: functorGen, 
        monadGen: monadGen, 
        oneOf: oneOf, 
        perturbGen: perturbGen, 
        repeatable: repeatable, 
        resize: resize, 
        runGen: runGen, 
        showSample: showSample, 
        "showSample'": showSample$prime, 
        sized: sized, 
        stateful: stateful, 
        uniform: uniform, 
        variant: variant, 
        vectorOf: vectorOf
    };
})();
var PS = PS || {};
PS.Test_QuickCheck = (function () {
    "use strict";
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Test_QuickCheck_Gen = PS.Test_QuickCheck_Gen;
    var Data_String = PS.Data_String;
    var Math = PS.Math;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Array = PS.Data_Array;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Success() {

    };
    Success.value = new Success();
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    var AlphaNumString = {
        create: function (value) {
            return value;
        }
    };
    function Arbitrary(arbitrary) {
        this.arbitrary = arbitrary;
    };
    function CoArbitrary(coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    function Testable(test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_437) {
        return function (_438) {
            if (_437) {
                return Success.value;
            };
            if (!_437) {
                return new Failed(_438);
            };
            throw new Error("Failed pattern match");
        };
    };
    var testableResult = new Testable(Prelude["return"](Test_QuickCheck_Gen.monadGen));
    var testableBoolean = new Testable(function (_446) {
        if (_446) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Success.value);
        };
        if (!_446) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(new Failed("Test returned false"));
        };
        throw new Error("Failed pattern match");
    });
    var test = function (dict) {
        return dict.test;
    };
    var showResult = new Prelude.Show(function (_439) {
        if (_439 instanceof Success) {
            return "Success";
        };
        if (_439 instanceof Failed) {
            return "Failed: " + _439.value0;
        };
        throw new Error("Failed pattern match");
    });
    var quickCheckPure = function (__dict_Testable_203) {
        return function (s) {
            var quickCheckPure$prime = function (st) {
                return function (n) {
                    return function (prop) {
                        var go = function (_447) {
                            if (_447 <= 0) {
                                return Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]);
                            };
                            return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(test(__dict_Testable_203)(prop))(function (_63) {
                                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(go(_447 - 1))(function (_62) {
                                    return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_63)(_62));
                                });
                            });
                        };
                        return Test_QuickCheck_Gen.evalGen(go(n))(st);
                    };
                };
            };
            return quickCheckPure$prime({
                newSeed: s, 
                size: 10
            });
        };
    };
    var quickCheck$prime = function (__dict_Testable_204) {
        return function (n) {
            return function (prop) {
                var throwOnFirstFailure = function (__copy__448) {
                    return function (__copy__449) {
                        var _448 = __copy__448;
                        var _449 = __copy__449;
                        tco: while (true) {
                            if (_449.length === 0) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                            };
                            if (_449.length >= 1) {
                                var _1796 = _449.slice(1);
                                if (_449[0] instanceof Failed) {
                                    return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber)(_448) + (" failed: \n" + (_449[0]).value0))));
                                };
                            };
                            if (_449.length >= 1) {
                                var _1798 = _449.slice(1);
                                var __tco__448 = _448 + 1;
                                _448 = __tco__448;
                                _449 = _1798;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                var countSuccesses = function (_450) {
                    if (_450.length === 0) {
                        return 0;
                    };
                    if (_450.length >= 1) {
                        var _1801 = _450.slice(1);
                        if (_450[0] instanceof Success) {
                            return 1 + countSuccesses(_1801);
                        };
                    };
                    if (_450.length >= 1) {
                        var _1803 = _450.slice(1);
                        return countSuccesses(_1803);
                    };
                    throw new Error("Failed pattern match");
                };
                return function __do() {
                    var _64 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = quickCheckPure(__dict_Testable_204)(_64)(n)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber)(successes) + ("/" + (Prelude.show(Prelude.showNumber)(n) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck = function (__dict_Testable_205) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_205)(100)(prop);
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_206) {
        return function (__dict_CoArbitrary_207) {
            return new CoArbitrary(function (_442) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(coarbitrary(__dict_CoArbitrary_206)(_442.value0))(coarbitrary(__dict_CoArbitrary_207)(_442.value1));
            });
        };
    };
    var coarbNumber = new CoArbitrary(Test_QuickCheck_Gen.perturbGen);
    var coarbMaybe = function (__dict_CoArbitrary_208) {
        return new CoArbitrary(function (_444) {
            if (_444 instanceof Data_Maybe.Nothing) {
                return Test_QuickCheck_Gen.perturbGen(1);
            };
            if (_444 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_208)(_444.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_209) {
        return function (__dict_CoArbitrary_210) {
            return new CoArbitrary(function (_443) {
                if (_443 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_209)(_443.value0);
                };
                if (_443 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_210)(_443.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbChar = new CoArbitrary(function (c) {
        return coarbitrary(coarbNumber)(Data_Char.toCharCode(c));
    });
    var coarbBoolean = new CoArbitrary(function (_440) {
        if (_440) {
            return Test_QuickCheck_Gen.perturbGen(1);
        };
        if (!_440) {
            return Test_QuickCheck_Gen.perturbGen(2);
        };
        throw new Error("Failed pattern match");
    });
    var coarbArray = function (__dict_CoArbitrary_211) {
        return new CoArbitrary(function (_445) {
            if (_445.length === 0) {
                return Prelude.id(Prelude.categoryArr);
            };
            if (_445.length >= 1) {
                var _1816 = _445.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr)(coarbitrary(coarbArray(__dict_CoArbitrary_211))(_1816))(coarbitrary(__dict_CoArbitrary_211)(_445[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = new CoArbitrary(function (s) {
        return coarbitrary(coarbArray(coarbMaybe(coarbNumber)))(Prelude["<$>"](Data_Array.functorArray)(Data_String.charCodeAt(0))(Data_String.split("")(s)));
    });
    var coarbAlphaNumString = new CoArbitrary(function (_441) {
        return coarbitrary(coarbString)(_441);
    });
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_214) {
        return function (__dict_Testable_215) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_214))(function (_61) {
                    return test(__dict_Testable_215)(f(_61));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_216) {
        return function (__dict_Arbitrary_217) {
            return new Arbitrary(Prelude["<*>"](Test_QuickCheck_Gen.applyGen)(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_216)))(arbitrary(__dict_Arbitrary_217)));
        };
    };
    var arbNumber = new Arbitrary(Test_QuickCheck_Gen.uniform);
    var arbFunction = function (__dict_CoArbitrary_219) {
        return function (__dict_Arbitrary_220) {
            return new Arbitrary(Test_QuickCheck_Gen.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_219)(a)(arbitrary(__dict_Arbitrary_220));
            }));
        };
    };
    var arbChar = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["*"](Prelude.numNumber)(65535)))(Test_QuickCheck_Gen.uniform));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Gen.uniform)(function (_53) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)((_53 * 2) < 1);
    }));
    var arbEither = function (__dict_Arbitrary_221) {
        return function (__dict_Arbitrary_222) {
            return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_55) {
                return _55 ? Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_221)) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_222));
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_218) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_56) {
            return _56 ? Prelude.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Maybe.Nothing.value) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_218));
        }));
    };
    var arbArray = function (__dict_Arbitrary_223) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_60) {
            return _60 ? Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]) : Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_223))(function (_59) {
    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_223)))(function (_58) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_59)(_58));
    });
});
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    var coarbFunction = function (__dict_Arbitrary_212) {
        return function (__dict_CoArbitrary_213) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_212)))(function (_57) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_213))(Data_Array.map(f)(_57))(gen);
                    });
                };
            });
        };
    };
    var arbAlphaNumString = new Arbitrary((function () {
        var lookup = function (x) {
            var index = Math.round(x * (Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1));
            return Data_String_Unsafe.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
        };
        return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(arbNumber)))(function (_54) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude["<<<"](Prelude.semigroupoidArr)(AlphaNumString.create)(Data_String.fromCharArray)(Prelude["<$>"](Data_Array.functorArray)(lookup)(_54)));
        });
    })());
    return {
        "<?>": $less$qmark$greater, 
        AlphaNumString: AlphaNumString, 
        Arbitrary: Arbitrary, 
        CoArbitrary: CoArbitrary, 
        Failed: Failed, 
        Success: Success, 
        Testable: Testable, 
        arbAlphaNumString: arbAlphaNumString, 
        arbArray: arbArray, 
        arbBoolean: arbBoolean, 
        arbChar: arbChar, 
        arbEither: arbEither, 
        arbFunction: arbFunction, 
        arbMaybe: arbMaybe, 
        arbNumber: arbNumber, 
        arbString: arbString, 
        arbTuple: arbTuple, 
        arbitrary: arbitrary, 
        coarbAlphaNumString: coarbAlphaNumString, 
        coarbArray: coarbArray, 
        coarbBoolean: coarbBoolean, 
        coarbChar: coarbChar, 
        coarbEither: coarbEither, 
        coarbFunction: coarbFunction, 
        coarbMaybe: coarbMaybe, 
        coarbNumber: coarbNumber, 
        coarbString: coarbString, 
        coarbTuple: coarbTuple, 
        coarbitrary: coarbitrary, 
        quickCheck: quickCheck, 
        "quickCheck'": quickCheck$prime, 
        quickCheckPure: quickCheckPure, 
        showResult: showResult, 
        test: test, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction, 
        testableResult: testableResult
    };
})();
